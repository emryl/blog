<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Lots of emryl</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://blog.rylander.io/"/>
  <updated>2020-04-28T18:52:09.000Z</updated>
  <id>https://blog.rylander.io/</id>
  
  <author>
    <name>emryl</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Add Let&#39;s Encrypt Certificate to vCenter 7</title>
    <link href="https://blog.rylander.io/2020/04/28/add-lets-encrypt-certificate-to-vcenter-7/"/>
    <id>https://blog.rylander.io/2020/04/28/add-lets-encrypt-certificate-to-vcenter-7/</id>
    <published>2020-04-28T18:52:09.000Z</published>
    <updated>2020-04-28T18:52:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>It seems the new vCenter 7 is rather picky. What worked on the 6.7 results in the dreaded error “Error occurred while fetching tls: Exception found (the trustAnchors parameter must be non-empty)”.</p><p>The fullchain.cer file produced by Let’s Encrypt needs to replaced with the proper certificate chain.<br>My chain looks like this<br>-&gt;Let’s Encrypt Authority X3 (IdenTrust cross-signed)<br>–&gt;DST Root CA X3</p><img src="/2020/04/28/add-lets-encrypt-certificate-to-vcenter-7/chainoftrust.png" class=""><p>Create a new fullchain.cer by downloading the corresponding certificates.</p><p>Intermediate Certificates<br>Let’s Encrypt Authority X3 (IdenTrust cross-signed)<br><a href="https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem.txt" target="_blank" rel="noopener">https://letsencrypt.org/certs/lets-encrypt-x3-cross-signed.pem.txt</a></p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">-----BEGIN CERTIFICATE-----</span><br><span class="line">MIIEkjCCA<span class="number">3</span>qgAwIBAgIQCgFBQgAAAVOFc<span class="number">2</span>oLheynCDANBgkqhkiG<span class="number">9</span>w<span class="number">0</span>BAQsFADA/</span><br><span class="line">MSQwIgYDVQQKExtEaWdpdGFsIFNpZ<span class="number">25</span>hdHVyZSBUcnVzdCBDby<span class="number">4</span>xFzAVBgNVBAMT</span><br><span class="line">DkRTVCBSb<span class="number">290</span>IENBIFgzMB<span class="number">4</span>XDTE<span class="number">2</span>MDMxNzE<span class="number">2</span>NDA<span class="number">0</span>NloXDTIxMDMxNzE<span class="number">2</span>NDA<span class="number">0</span>Nlow</span><br><span class="line">SjELMAkGA<span class="number">1</span>UEBhMCVVMxFjAUBgNVBAoTDUxldCdzIEVuY<span class="number">3</span>J<span class="number">5</span>cHQxIzAhBgNVBAMT</span><br><span class="line">GkxldCdzIEVuY<span class="number">3</span>J<span class="number">5</span>cHQgQXV<span class="number">0</span>aG<span class="number">9</span>yaXR<span class="number">5</span>IFgzMIIBIjANBgkqhkiG<span class="number">9</span>w<span class="number">0</span>BAQEFAAOC</span><br><span class="line">AQ<span class="number">8</span>AMIIBCgKCAQEAnNMM<span class="number">8</span>FrlLke<span class="number">3</span>cl<span class="number">03</span>g<span class="number">7</span>NoYzDq<span class="number">1</span>zUmGSXhvb<span class="number">418</span>XCSL<span class="number">7e4</span>S<span class="number">0</span>EF</span><br><span class="line">q<span class="number">6</span>meNQhY<span class="number">7</span>LEqxGiHC<span class="number">6</span>PjdeTm<span class="number">86</span>dicbp<span class="number">5</span>gWAf<span class="number">15</span>Gan/PQeGdxyGkOlZHP/uaZ<span class="number">6</span>WA<span class="number">8</span></span><br><span class="line">SMx+yk<span class="number">13</span>EiSdRxta<span class="number">67</span>nsHjcAHJyse<span class="number">6</span>cF<span class="number">6</span>s<span class="number">5</span>K<span class="number">671</span>B<span class="number">5</span>TaYucv<span class="number">9</span>bTyWaN<span class="number">8</span>jKkKQDIZ<span class="number">0</span></span><br><span class="line">Z<span class="number">8</span>h/pZq<span class="number">4</span>UmEUEz<span class="number">9</span>l<span class="number">6</span>YKHy<span class="number">9</span>v<span class="number">6</span>Dlb<span class="number">2</span>honzhT+Xhq+w<span class="number">3</span>Brvaw<span class="number">2</span>VFn<span class="number">3</span>EK<span class="number">6</span>BlspkENnWA</span><br><span class="line">a<span class="number">6</span>xK<span class="number">8</span>xuQSXgvopZPKiAlKQTGdMDQMc<span class="number">2</span>PMTiVFrqoM<span class="number">7</span>hD<span class="number">8</span>bEfwzB/onkxEz<span class="number">0</span>tNvjj</span><br><span class="line">/PIzark<span class="number">5</span>McWvxI<span class="number">0</span>NHWQWM<span class="number">6</span>r<span class="number">6</span>hCm<span class="number">21</span>AvA<span class="number">2</span>H<span class="number">3</span>DkwIDAQABo<span class="number">4</span>IBfTCCAXkwEgYDVR<span class="number">0</span>T</span><br><span class="line">AQH/BAgwBgEB/wIBADAOBgNVHQ<span class="number">8</span>BAf<span class="number">8</span>EBAMCAYYwfwYIKwYBBQUHAQEEczBxMDIG</span><br><span class="line">CCsGAQUFBzABhiZodHRwO<span class="keyword">i8</span>vaXNyZy<span class="number">50</span>cnVzdGlkLm<span class="number">9</span>jc<span class="number">3</span>AuaWRlbnRydXN<span class="number">0</span>LmNv</span><br><span class="line">bTA<span class="number">7</span>BggrBgEFBQcwAoYvaHR<span class="number">0</span>cDovL<span class="number">2</span>FwcHMuaWRlbnRydXN<span class="number">0</span>LmNvbS<span class="number">9</span>yb<span class="number">290</span>cy<span class="number">9</span>k</span><br><span class="line"><span class="keyword">c</span><span class="number">3</span>Ryb<span class="number">290</span>Y<span class="number">2</span>F<span class="number">4</span>My<span class="number">5</span>wN<span class="number">2</span>MwHwYDVR<span class="number">0</span>jBBgwFoAUxKexpHsscfrb<span class="number">4</span>UuQdf/EFWCFiRAw</span><br><span class="line">VAYDVR<span class="number">0</span>gBE<span class="number">0</span>wSzAIBgZngQwBAgEwPwYLKwYBBAGC<span class="number">3</span>xMBAQEwMDAuBggrBgEFBQcC</span><br><span class="line">ARYiaHR<span class="number">0</span>cDovL<span class="number">2</span>Nwcy<span class="number">5</span>yb<span class="number">290</span>LXgxLmxldHNlbmNyeXB<span class="number">0</span>Lm<span class="number">9</span>yZzA<span class="number">8</span>BgNVHR<span class="number">8</span>ENTAz</span><br><span class="line">MDGgL<span class="number">6</span>AthitodHRwO<span class="keyword">i8</span>vY<span class="number">3</span>JsLmlkZW<span class="number">50</span>cnVzdC<span class="number">5</span>jb<span class="number">20</span>vRFNUUk<span class="number">9</span>PVENBWDNDUkwu</span><br><span class="line">Y<span class="number">3</span>JsMB<span class="number">0</span>GA<span class="number">1</span>UdDgQWBBSoSmpjBH<span class="number">3</span>duubRObemRWXv<span class="number">86</span>jsoTANBgkqhkiG<span class="number">9</span>w<span class="number">0</span>BAQsF</span><br><span class="line">AAOCAQEA<span class="number">3</span>TPXEfNjWDjdGBX<span class="number">7</span>CVW+dla<span class="number">5</span>cEilaUcne<span class="number">8</span>IkCJLxWh<span class="number">9</span>KEik<span class="number">3</span>JHRRHGJo</span><br><span class="line">uM<span class="number">2</span>VcGfl<span class="number">96</span>S<span class="number">8</span>TihRzZvoroed<span class="number">6</span>t<span class="keyword">i6</span>WqEBmtzw<span class="number">3</span>Wodatg+VyOeph<span class="number">4</span>EYpr/<span class="number">1</span>wXKtx<span class="number">8</span>/</span><br><span class="line">wApIvJSwtmV<span class="keyword">i4</span>MFU<span class="number">5</span>aMqrSDE<span class="number">6</span>ea<span class="number">73</span>Mj<span class="number">2</span>tcMyo<span class="number">5</span>jMd<span class="number">6</span>jmeWUHK<span class="number">8</span>so/joWUoHOUgwu</span><br><span class="line">X<span class="number">4</span>Po<span class="number">1</span>QYz+<span class="number">3</span>dszkDqMp<span class="number">4</span>fklxBwXRsW<span class="number">10</span>KXzPMTZ+sOPAveyxindmjkW<span class="number">8</span>lGy+QsRlG</span><br><span class="line">PfZ+G<span class="number">6</span>Z<span class="number">6</span>h<span class="number">7</span>mjem<span class="number">0</span>Y+iWlkYcV<span class="number">4</span>PIWL<span class="number">1</span>iwB<span class="keyword">i8</span>saCbGS<span class="number">5</span>jN<span class="number">2</span>p<span class="number">8</span>M+X+Q<span class="number">7</span>UNKEkROb<span class="number">3</span>N<span class="number">6</span></span><br><span class="line">KOqkqm<span class="number">57</span>TH<span class="number">2</span>H<span class="number">3</span>eDJAkSnh<span class="number">6</span>/DNFu<span class="number">0</span>Qg==</span><br><span class="line">-----END CERTIFICATE-----</span><br></pre></td></tr></table></figure><p>DST Root CA X3<br><a href="https://www.identrust.com/dst-root-ca-x3" target="_blank" rel="noopener">https://www.identrust.com/dst-root-ca-x3</a></p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">-----BEGIN</span> CERTIFICATE<span class="params">-----</span></span><br><span class="line">MIIDSjCCAjKgAwIBAgIQRK+wgNajJ7qJMDmGLvhAazANBgkqhkiG9w0BAQUFADA/</span><br><span class="line">MSQwIgYDVQQKExtEaWdpdGFsIFNpZ25hdHVyZSBUcnVzdCBDby4xFzAVBgNVBAMT</span><br><span class="line">DkRTVCBSb290IENBIFgzMB4XDTAwMDkzMDIxMTIxOVoXDTIxMDkzMDE0MDExNVow</span><br><span class="line">PzEkMCIGA1UEChMbRGlnaXRhbCBTaWduYXR1cmUgVHJ1c3QgQ28uMRcwFQYDVQQD</span><br><span class="line">Ew5EU1QgUm9vdCBDQSBYMzCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEB</span><br><span class="line">AN+v6ZdQCINXtMxiZfaQguzH0yxrMMpb7NnDfcdAwRgUi+DoM3ZJKuM/IUmTrE4O</span><br><span class="line">rz5Iy2Xu/NMhD2XSKtkyj4zl93ewEnu1lcCJo6m67XMuegwGMoOifooUMM0RoOEq</span><br><span class="line">OLl5CjH9UL2AZd+3UWODyOKIYepLYYHsUmu5ouJLGiifSKOeDNoJjj4XLh7dIN9b</span><br><span class="line">xiqKqy69cK3FCxolkHRyxXtqqzTWMIn/5WgTe1QLyNau7Fqckh49ZLOMxt+<span class="string">/yUFw</span></span><br><span class="line">7BZy1SbsOFU5Q9D8/RhcQPGX69Wam40dutolucbY38EVAjqr2m7xPi71XAicPNaD</span><br><span class="line">aeQQmxkqtilX4+U9m5/wAl0CAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNV</span><br><span class="line">HQ8BAf8EBAMCAQYwHQYDVR0OBBYEFMSnsaR7LHH62+FLkHX/xBVghYkQMA0GCSqG</span><br><span class="line">SIb3DQEBBQUAA4IBAQCjGiybFwBcqR7uKGY3Or+Dxz9LwwmglSBd49lZRNI+DT69</span><br><span class="line">ikugdB/OEIK<span class="keyword">cd</span>Bodfpga3csTS7MgROSR6cz8faXbauX+5v3gTt23ADq1cEmv8uXr</span><br><span class="line">AvHRAosZy5Q6XkjEGB5YGV8eAlrwDPGxrancWYaLbumR9YbK+rlmM6pZW87ipxZz</span><br><span class="line">R8srzJmwN0jP41ZL9c8PDHIyh8bwRLtTcm1D9SZImlJnt1ir/md2cXjbDaJWFBM5</span><br><span class="line">JDGFoqgCWjBH4d1QB7wCCZAA62RjYJsWvIjJEubSfZGL+T0yjWW06XyxV3bqxbYo</span><br><span class="line">Ob8VZRzI9neWagqNdwvYkQsEjgfbKbYK7p2CNTUQ</span><br><span class="line"><span class="params">-----END</span> CERTIFICATE<span class="params">-----</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;It seems the new vCenter 7 is rather picky. What worked on the 6.7 results in the dreaded error “Error occurred while fetching tls: Excep
      
    
    </summary>
    
    
      <category term="vmware" scheme="https://blog.rylander.io/tags/vmware/"/>
    
      <category term="esxi" scheme="https://blog.rylander.io/tags/esxi/"/>
    
  </entry>
  
  <entry>
    <title>Setup Cloudflare Access</title>
    <link href="https://blog.rylander.io/2018/08/03/setup-cloudflare-access/"/>
    <id>https://blog.rylander.io/2018/08/03/setup-cloudflare-access/</id>
    <published>2018-08-03T18:55:32.000Z</published>
    <updated>2018-08-03T18:55:32.000Z</updated>
    
    <content type="html"><![CDATA[<p>So this is a neat feature where I can expose web services externally, but hidden and protected by Cloudflare. I’m thinking I want to expose my Evernote replacement Bookstack/Confluence (still not decided yet on which). This is where I keep information which contain confidential stuff like passwords and like. Previously I’ve kept those in Evernote, but I want to move away from that platform to something more open or atleast something which keep evolving.</p><p>So I’m hosting both an Atlassian Confluence instance as well as a Bookstack instance. In this writeup, I’m exposing my Bookstack via Cloudflare Access.</p><p>I’m securing my local origin using ip-restrictions from Cloudflare to only port-forward requests originating from Cloudflare CDN. These requests hits my Traefik reverse proxy which forward the traffic to whatever Docker instance is serving Bookstack.</p><img src="/2018/08/03/setup-cloudflare-access/238b904a-3b2c-413c-aad4-85a62a7e72b3.png" class=""><h2 id="Setup-Cloudflare-Access"><a href="#Setup-Cloudflare-Access" class="headerlink" title="Setup Cloudflare Access"></a>Setup Cloudflare Access</h2><img src="/2018/08/03/setup-cloudflare-access/setup-cloudflare-access.png" class=""><p>This is basically the public login URL that hosts the options for authenticating the user. I consider this my base IDP thus the name. This page will display whatever authentication options available whenever the user hits one of my protected sites.</p><img src="/2018/08/03/setup-cloudflare-access/f6d2af3f-95a7-4399-ad3d-1ea415c67ad6.png" class=""><h2 id="Setting-up-GitHub-OAuth-flow"><a href="#Setting-up-GitHub-OAuth-flow" class="headerlink" title="Setting up GitHub OAuth flow"></a>Setting up GitHub OAuth flow</h2><p>I’m using the GitHub OAuth provider to protect access to my sites. I setup the consent in GitHub like this.</p><img src="/2018/08/03/setup-cloudflare-access/setting-up-github-oauth-flow.png" class=""><h2 id="OAuth-keys"><a href="#OAuth-keys" class="headerlink" title="OAuth keys"></a>OAuth keys</h2><p>These OAuth keys need to be copied to the Cloudflare integration settings with GitHub.</p><img src="/2018/08/03/setup-cloudflare-access/oauth-keys.png" class=""><h2 id="Adding-GitHub-as-identity-provider-to-Cloudflare"><a href="#Adding-GitHub-as-identity-provider-to-Cloudflare" class="headerlink" title="Adding GitHub as identity provider to Cloudflare"></a>Adding GitHub as identity provider to Cloudflare</h2><p>The keys from GitHub are provided here.</p><img src="/2018/08/03/setup-cloudflare-access/adding-github-as-identity-provider-to-cloudflare.png" class=""><img src="/2018/08/03/setup-cloudflare-access/6326ca0c-e73a-4e23-9394-16db249b9a36.png" class=""><h2 id="In-action"><a href="#In-action" class="headerlink" title="In action"></a>In action</h2><p>When I don’t have a valid session, I’m prompted to authenticate with whatever identity provider I’ve configured, in this case GitHub only.</p><img src="/2018/08/03/setup-cloudflare-access/in-action.png" class=""><p>Provide valid credentials for any GitHub account</p><img src="/2018/08/03/setup-cloudflare-access/ecb711de-5e2b-483e-944c-996c7cc05756.png" class=""><h2 id="Authorization-policies"><a href="#Authorization-policies" class="headerlink" title="Authorization policies"></a>Authorization policies</h2><p>Create authorization policies to control who can access depending on given valid authentication. In this case, you need to be a member of the “emryl” organization to be authorized.</p><img src="/2018/08/03/setup-cloudflare-access/authorization-policies.png" class=""><h2 id="Message-when-not-being-authorized"><a href="#Message-when-not-being-authorized" class="headerlink" title="Message when not being authorized"></a>Message when not being authorized</h2><img src="/2018/08/03/setup-cloudflare-access/message-when-not-being-authorized.png" class="">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;So this is a neat feature where I can expose web services externally, but hidden and protected by Cloudflare. I’m thinking I want to expo
      
    
    </summary>
    
    
      <category term="cloudflare" scheme="https://blog.rylander.io/tags/cloudflare/"/>
    
      <category term="github" scheme="https://blog.rylander.io/tags/github/"/>
    
      <category term="oauth" scheme="https://blog.rylander.io/tags/oauth/"/>
    
  </entry>
  
  <entry>
    <title>Using GitHub Pages as Web Host and Cloudflare as CDN</title>
    <link href="https://blog.rylander.io/2018/08/03/using-github-pages-as-web-host-and-cloudflare-as-cdn/"/>
    <id>https://blog.rylander.io/2018/08/03/using-github-pages-as-web-host-and-cloudflare-as-cdn/</id>
    <published>2018-08-03T18:15:14.000Z</published>
    <updated>2018-08-03T18:15:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>So it is that time of the year to move to a new free web hosting provider. Actually I had to switch to TLS enabled backends due to setting up Cloudflares Access and thus securing all access to my origin servers. For some reason, my current provider AWS doesn’t support TLS on their free static web hosting using Buckets, so I’ve decided to place my blog on Github Pages instead. </p><img src="/2018/08/03/using-github-pages-as-web-host-and-cloudflare-as-cdn/662949ef-1d9a-4b56-bc56-5e26c9936cf1.png" class=""><h2 id="Configure-Hexo"><a href="#Configure-Hexo" class="headerlink" title="Configure Hexo"></a>Configure Hexo</h2><p>I use the static web framework Hexo, which I can configure to deploy directly to a git repository. I currently have a Continous Delivery flow setup using Wercker, but you can also deploy directly using Hexo.</p><p>I’ve updated my _config.yml file to switch away from S3 buckets on AWS to a Github repository. Since Github pages is set to monitor the “master” branch, I’ve defined it here as well as the user. In this scenario I’m relying on my private SSH key to authorize the git push, but you can setup whatever mechanism which suits your workflow best.</p><p>To publish, I need to issue a “hexo deploy” in my local publishing environment.</p><img src="/2018/08/03/using-github-pages-as-web-host-and-cloudflare-as-cdn/configure-hexo.png" class=""><h2 id="Configuring-GitHub-Pages"><a href="#Configuring-GitHub-Pages" class="headerlink" title="Configuring GitHub Pages"></a>Configuring GitHub Pages</h2><p>I’ve created a public repository in my organization. Since I will be using a custom domain on GitHub Pages, it doesn’t really matter what its called. In my case, I’ve named in “Blog”. Once I’ve pushed my first commit to the “master” branch, I can enable GitHub Pages in the Settings dialog for the repository. I’ve also defined the custom domain name, which relies on my DNS entry for “blog.rylander.io”.</p><p>This is actually a multi-step process as it takes time to enable custom domains and I want to enable HTTPS but eventually it can be setup like this. The last step is to enable “Enforce HTTPS”.</p><img src="/2018/08/03/using-github-pages-as-web-host-and-cloudflare-as-cdn/configuring-github-pages.png" class=""><h2 id="CNAME-entry"><a href="#CNAME-entry" class="headerlink" title="CNAME entry"></a>CNAME entry</h2><p>When enabling the Custom domain option in the settings for the repository, actually creates a CNAME file with the custom domain specified within it. This file is placed in the root of the repository.</p><p>This entry is used to setup the reverse proxy correctly at GitHub to serve the correct content.</p><img src="/2018/08/03/using-github-pages-as-web-host-and-cloudflare-as-cdn/cname-entry.png" class=""><h2 id="Add-Hexo-CNAME-plugin"><a href="#Add-Hexo-CNAME-plugin" class="headerlink" title="Add Hexo CNAME plugin"></a>Add Hexo CNAME plugin</h2><p>In order to automatically have Hexo persist the required CNAME file for GitHub Pages custom domain to work, you need to install a plugin. It will read your Hexo configuration and use your “url” setting to create the CNAME entry.</p><p>Install the plugin:</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-generator-cname <span class="comment">--save</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>This will generate the CNAME file in your output folder.</p><img src="/2018/08/03/using-github-pages-as-web-host-and-cloudflare-as-cdn/add-hexo-cname-plugin.png" class=""><h2 id="Configure-CloudFlare"><a href="#Configure-CloudFlare" class="headerlink" title="Configure CloudFlare"></a>Configure CloudFlare</h2><p>The only change I did in my DNS settings at CloudFlare was to repoint my CNAME entry to emryl.github.io. </p><p>The HTTPS handshake for the rylander.io domain is handled by CloudFlare, I do not need to place a custom certificate on GitHub. This means I can only use the “Full” setting, but not the “Strict” setting for the Downstream connections back to the Origin servers.</p><img src="/2018/08/03/using-github-pages-as-web-host-and-cloudflare-as-cdn/configure-cloudflare.png" class="">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;So it is that time of the year to move to a new free web hosting provider. Actually I had to switch to TLS enabled backends due to settin
      
    
    </summary>
    
    
      <category term="web" scheme="https://blog.rylander.io/tags/web/"/>
    
      <category term="hexo" scheme="https://blog.rylander.io/tags/hexo/"/>
    
      <category term="github" scheme="https://blog.rylander.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Install Windows Admin Center on Windows Server 2016 Core</title>
    <link href="https://blog.rylander.io/2018/07/28/install-windows-admin-center-on-windows-server-2016-core/"/>
    <id>https://blog.rylander.io/2018/07/28/install-windows-admin-center-on-windows-server-2016-core/</id>
    <published>2018-07-28T10:19:36.000Z</published>
    <updated>2018-07-28T10:19:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>Windows Admin Center (WAC) is a free browser-based Microsoft Server Management tool released in April 2018. Use it for managing Windows Server 2016, Windows Server 2012, and Windows 10. Additionally, it can manage Hyper-V Server, Azure VMs, Azure Backup, highly-converged infrastructures (HCI), and more.</p><p>Sounds aweseome! The caveat is that it is an initial release and will not replace existing tooling for a long time.</p><p>I will use a pre-installed LetsEncrypt certificate</p><p><a href="https://docs.microsoft.com/en-us/windows-server/manage/windows-admin-center/deploy/install#install-on-server-core" target="_blank" rel="noopener">https://docs.microsoft.com/en-us/windows-server/manage/windows-admin-center/deploy/install#install-on-server-core</a></p><img src="/2018/07/28/install-windows-admin-center-on-windows-server-2016-core/76faea3f-0cac-4ad4-be02-62db289a26df.jpg" class=""><h2 id="Download"><a href="#Download" class="headerlink" title="Download"></a>Download</h2><p>Choose either the GA version or the bleeding-edge Windows Insider version.</p><img src="/2018/07/28/install-windows-admin-center-on-windows-server-2016-core/download.png" class=""><h2 id="Windows-Insider"><a href="#Windows-Insider" class="headerlink" title="Windows Insider"></a>Windows Insider</h2><p>This is the less tested, likely to break version.</p><img src="/2018/07/28/install-windows-admin-center-on-windows-server-2016-core/windows-insider.png" class=""><h2 id="Prepping-before-installation"><a href="#Prepping-before-installation" class="headerlink" title="Prepping before installation"></a>Prepping before installation</h2><h3 id="Getting-the-installation-files-onto-the-Core-instance"><a href="#Getting-the-installation-files-onto-the-Core-instance" class="headerlink" title="Getting the installation files onto the Core instance"></a>Getting the installation files onto the Core instance</h3><p>I mapped a network share and copied the files to the local host (/persistent is optional). Apparently the tried and true net use command still lives on.</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\Administrator&gt;net use x: \\10.0.1.21\cloudStorage /persistent:yes /user:admlocal</span><br><span class="line">The password <span class="keyword">or</span><span class="built_in"> user </span>name is invalid <span class="keyword">for</span> \\10.0.1.21\cloudStorage.</span><br><span class="line">Enter the password <span class="keyword">for</span> <span class="string">'admlocal'</span> <span class="keyword">to</span> connect <span class="keyword">to</span> <span class="string">'10.0.1.21'</span>:</span><br><span class="line">The command completed successfully.</span><br><span class="line"></span><br><span class="line"> </span><br></pre></td></tr></table></figure><img src="/2018/07/28/install-windows-admin-center-on-windows-server-2016-core/getting-the-installation-files-onto-the-core-instance.png" class=""><h3 id="Installing-a-LetsEncrypt-certificate"><a href="#Installing-a-LetsEncrypt-certificate" class="headerlink" title="Installing a LetsEncrypt certificate"></a>Installing a LetsEncrypt certificate</h3><p>Since the self-generated certificate is set to expiry after 90 days, I opted for a LetsEncrypt certificate from the start. I will implement an automated process using acme.sh later on.</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$credential</span> = Get-Credential -UserName <span class="string">'Enter password below'</span> -Message <span class="string">'Enter password below'</span></span><br><span class="line">Import-PfxCertificate -FilePath c:\temp\rylander<span class="selector-class">.io</span><span class="selector-class">.pfx</span> -CertStoreLocation Cert:\LocalMachine\My -Password <span class="variable">$credential</span>.Password</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>The thumbprint will be displayed after installation, which is used during the installation of the Windows Admin Center.</p><img src="/2018/07/28/install-windows-admin-center-on-windows-server-2016-core/installing-a-letsencrypt-certificate.png" class=""><h2 id="Installation-syntax-for-Windows-Admin-Center"><a href="#Installation-syntax-for-Windows-Admin-Center" class="headerlink" title="Installation syntax for Windows Admin Center"></a>Installation syntax for Windows Admin Center</h2><p>The /qn switch makes this a Silent one. </p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msiexec /i &lt;WindowsAdminCenterInstallerName&gt;.msi /qn /L*v log.txt <span class="attribute">SME_PORT</span>=&lt;port&gt; <span class="attribute">SME_THUMBPRINT</span>=&lt;thumbprint&gt; <span class="attribute">SSL_CERTIFICATE_OPTION</span>=installed</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>To install using the generated (90 days expiry certificate)</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msiexec /i &lt;WindowsAdminCenterInstallerName&gt;<span class="variable">.msi</span> /qn /L*v log<span class="variable">.txt</span> SME_PORT=&lt;port&gt; SSL_CERTIFICATE_OPTION=<span class="keyword">generate</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure><h3 id="Installing-the-Windows-Admin-Center-using-a-pre-installed-LetsEncrypt-certificate"><a href="#Installing-the-Windows-Admin-Center-using-a-pre-installed-LetsEncrypt-certificate" class="headerlink" title="Installing the Windows Admin Center using a pre-installed LetsEncrypt certificate"></a>Installing the Windows Admin Center using a pre-installed LetsEncrypt certificate</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msiexec /i WindowsAdminCenterPreview1807.msi /qn /L*v log.txt <span class="attribute">SME_PORT</span>=443 <span class="attribute">SME_THUMBPRINT</span>=39CE96624BE31A06A411006564C0D63D860D688D <span class="attribute">SSL_CERTIFICATE_OPTION</span>=installed</span><br><span class="line"> </span><br></pre></td></tr></table></figure><img src="/2018/07/28/install-windows-admin-center-on-windows-server-2016-core/installing-the-windows-admin-center-using-a-pre-installed-letsencrypt-certificate.png" class=""><h2 id="Login"><a href="#Login" class="headerlink" title="Login"></a>Login</h2><img src="/2018/07/28/install-windows-admin-center-on-windows-server-2016-core/login.png" class=""><h2 id="The-managed-resource-connections"><a href="#The-managed-resource-connections" class="headerlink" title="The managed resource connections"></a>The managed resource connections</h2><img src="/2018/07/28/install-windows-admin-center-on-windows-server-2016-core/the-managed-resource-connections.png" class=""><h2 id="The-Web-View"><a href="#The-Web-View" class="headerlink" title="The Web View"></a>The Web View</h2><img src="/2018/07/28/install-windows-admin-center-on-windows-server-2016-core/the-web-view.png" class=""><h2 id="Manage-Roles-amp-Features"><a href="#Manage-Roles-amp-Features" class="headerlink" title="Manage Roles &amp; Features"></a>Manage Roles &amp; Features</h2><img src="/2018/07/28/install-windows-admin-center-on-windows-server-2016-core/manage-roles--amp--features.png" class="">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Windows Admin Center (WAC) is a free browser-based Microsoft Server Management tool released in April 2018. Use it for managing Windows S
      
    
    </summary>
    
    
      <category term="sysop" scheme="https://blog.rylander.io/tags/sysop/"/>
    
      <category term="windows" scheme="https://blog.rylander.io/tags/windows/"/>
    
      <category term="windows_core" scheme="https://blog.rylander.io/tags/windows-core/"/>
    
  </entry>
  
  <entry>
    <title>Local HTTPS Dev Proxy Using Lets Encrypt and Cloudflare</title>
    <link href="https://blog.rylander.io/2018/07/21/local-https-dev-proxy-using-lets-encrypt-and-cloudflare/"/>
    <id>https://blog.rylander.io/2018/07/21/local-https-dev-proxy-using-lets-encrypt-and-cloudflare/</id>
    <published>2018-07-21T08:05:15.000Z</published>
    <updated>2018-07-21T08:05:15.000Z</updated>
    
    <content type="html"><![CDATA[<p>As a first step of switching over to a DNS based process for maintaining Lets Encrypt certificates, I opted to start with upgrading my local environment as I do some tinkering with Kubernetes and thus end up with quite dynamic endpoint urls. The primary reason though is to enable wildcard certificates as Lets Encrypt only support these using the DNS method.</p><img src="/2018/07/21/local-https-dev-proxy-using-lets-encrypt-and-cloudflare/b8fd7d88-5173-425f-8a2b-d9e08c03e89d.png" class=""><h2 id="Introduction"><a href="#Introduction" class="headerlink" title="Introduction"></a>Introduction</h2><p>As I currently do some Kubernetes based labs, I’ve also looked into the Traefik reverse proxy. The most obvious options are otherwise nginx and HAProxy, as demonstrated in my previous setup based on nginx, but Traefik belong to a new breed of easy to use and MSA oriented components. Compared to the aforementioned options, Traefik is still young and does lack production history as well as the best-of-breed performance figures.</p><p>So back to Lets Encrypt certificates. This setup is designed to run as a local Docker container, proxying all HTTP/s requests to other services, be them Dockerized or not. An integration to my DNS provider is setup to add appropriate DNS records for each new unique host name which Lets Encrypt uses to validate my domain ownership. Thus I avoid having to expose an external facing web host just to create local certificates. I will though setup a proper externally facing reverse proxy, however that is on my backlog for now. </p><p>So the moving parts in this setup is the actual Docker container containing Traefik, configuration of my DNS provider (Cloudflare), configuration of my local DNS (Windows Server), and some settings in the local configuration file for Traefik. You will need an existing account with LetsEncrypt of course.</p><p>I’m using the base Docker setup by SIL International and forked into my own repository <a href="(https://github.com/mry/traefik-https-proxy).">(https://github.com/mry/traefik-https-proxy).</a></p><h2 id="GitHub-project"><a href="#GitHub-project" class="headerlink" title="GitHub project"></a>GitHub project</h2><p>I’ve create a quickstart project on GitHub which provides a docker-compose.yml file and a sample configuration file. Clone to a local directory and it can be run as is, after properly configuring the local settings.</p><p>I’ve created and published a public image at Docker Hub <a href="(https://hub.docker.com/r/emryl/traefik-localdev-proxy/)">(https://hub.docker.com/r/emryl/traefik-localdev-proxy/)</a> which is referenced from the docker-compose file.</p><p>Rename the local.env.example file by dropping the “.example” and fill in the settings.</p><img src="/2018/07/21/local-https-dev-proxy-using-lets-encrypt-and-cloudflare/github-project.png" class=""><h2 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h2><p>This is a basic docker-compose file, using the published image.</p><p>In the same directory where the docker-compose.yml file exists, type “docker-compose up -d” (-d is for daemon) to start the Traefik instance. It will proxy all HTTPS requests on port 443 to whatever matches according to the local configuration file above. </p><ol><li>Provide your own custom traefik configuration file if you have more advanced needs and uncomment the mapping entry and provide your own Traefik configuration.</li></ol><p>The LetsEncrypt certs and meta data are stored in the local certs folder.</p><img src="/2018/07/21/local-https-dev-proxy-using-lets-encrypt-and-cloudflare/docker-compose.png" class=""><h2 id="Local-env"><a href="#Local-env" class="headerlink" title="Local.env"></a>Local.env</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">TLD is your base domain</span><br><span class="line">SANS is your comma separated list of hosts</span><br><span class="line">BACKEND#_URL is your internal url <span class="keyword">to</span> the backend<span class="built_in"> service </span><span class="keyword">from</span> the proxy</span><br><span class="line">FRONTEND#_Domain is your<span class="built_in"> DNS </span>host name <span class="keyword">to</span> proxy</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>This is the basic template based approach, but you can also use your own custom Traefik configuration, just point to the correct .toml configuration in your docker configuration in the docker-compose file as described above.</p><img src="/2018/07/21/local-https-dev-proxy-using-lets-encrypt-and-cloudflare/localenv.png" class=""><h2 id="DNS-setup-Cloudflare"><a href="#DNS-setup-Cloudflare" class="headerlink" title="DNS setup - Cloudflare"></a>DNS setup - Cloudflare</h2><p>I’m using Cloudflare for my public DNS needs. I do run a split scenario with an internal DNS server as well and I have configured a wildcard entry on both my internal and public DNS.</p><p>I need to configure API access to Cloudflare DNS in order for Traefik being able to dynamically create records for LetsEntrypt to query.</p><p>To do that, go into <em>My Profile - API Keys</em>.</p><p>Copy your global API key and enter it in your local local.env file for parameter CLOUDFLARE_API_KEY</p><img src="/2018/07/21/local-https-dev-proxy-using-lets-encrypt-and-cloudflare/dns-setup---cloudflare.png" class=""><p>Provide all details for accessing Cloudflare</p><img src="/2018/07/21/local-https-dev-proxy-using-lets-encrypt-and-cloudflare/e3059e70-a3e4-4f5b-87fa-dee0108f80a1.png" class=""><p>When properly enabled, Traefik kan control you DNS entries at Cloudflare and thus create temporary records similar to this. These are only to validate with LetsEncrypt that you have control of the domain.</p><img src="/2018/07/21/local-https-dev-proxy-using-lets-encrypt-and-cloudflare/958899af-21a8-4428-baf6-453a9bde0602.png" class=""><h3 id="Configuring-the-DNS-entries"><a href="#Configuring-the-DNS-entries" class="headerlink" title="Configuring the DNS entries"></a>Configuring the DNS entries</h3><p>Chose a hostname to use, in my case I have defined local.rylander.io which points to my localhost endpoint. You could define a wildcard entry as shown above, which would send all non-defined hostnames to whatever ip you have defined.</p><img src="/2018/07/21/local-https-dev-proxy-using-lets-encrypt-and-cloudflare/configuring-the-dns-entries.png" class=""><h2 id="Test-it-out"><a href="#Test-it-out" class="headerlink" title="Test it out"></a>Test it out</h2><p>Navigate to your local url, in my case it is <a href="http://local.rylander.io" target="_blank" rel="noopener">http://local.rylander.io</a> which points to 127.0.0.1. The host-header is translated into the proper backend mapping in Traefik. In this test I’m forwarding to a local Proget instance.</p><img src="/2018/07/21/local-https-dev-proxy-using-lets-encrypt-and-cloudflare/test-it-out.png" class="">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;As a first step of switching over to a DNS based process for maintaining Lets Encrypt certificates, I opted to start with upgrading my lo
      
    
    </summary>
    
    
      <category term="cloudflare" scheme="https://blog.rylander.io/tags/cloudflare/"/>
    
      <category term="dns" scheme="https://blog.rylander.io/tags/dns/"/>
    
      <category term="letsencrypt" scheme="https://blog.rylander.io/tags/letsencrypt/"/>
    
  </entry>
  
  <entry>
    <title>Watching GitHub Repositories</title>
    <link href="https://blog.rylander.io/2018/07/20/watching-github-repositories/"/>
    <id>https://blog.rylander.io/2018/07/20/watching-github-repositories/</id>
    <published>2018-07-20T16:14:09.000Z</published>
    <updated>2018-07-20T16:14:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>I never bother to track changes on any GitHub repositories, but when I do, I use the Github File Watcher service.</p><img src="/2018/07/20/watching-github-repositories/c62545bb-33fa-41df-a16d-e55b8c8c041c.png" class=""><h2 id="Github-File-Watcher"><a href="#Github-File-Watcher" class="headerlink" title="Github File Watcher"></a>Github File Watcher</h2><p>Since I rely on many third party, open source, best effort types of solutions, I need a helper service to help me keep track of updates. One nice service I’ve used for some time now allows me keep track of any changes in a specified GitHub repository/file. When setup, it will send an email with a link back to GitHub for me to check what has changed. The nice feature of this is that I can specify which file I want to use as a trigger.</p><p><a href="https://app.github-file-watcher.com/" target="_blank" rel="noopener">https://app.github-file-watcher.com/</a></p><img src="/2018/07/20/watching-github-repositories/github-file-watcher.png" class="">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;I never bother to track changes on any GitHub repositories, but when I do, I use the Github File Watcher service.&lt;/p&gt;
&lt;img src=&quot;/2018/07/
      
    
    </summary>
    
    
      <category term="docker" scheme="https://blog.rylander.io/tags/docker/"/>
    
      <category term="github" scheme="https://blog.rylander.io/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>Setup CrashPlan for Small Business Using Docker on a Synology NAS</title>
    <link href="https://blog.rylander.io/2018/07/20/setup-crashplan-for-small-business-using-docker-on-a-synology-nas/"/>
    <id>https://blog.rylander.io/2018/07/20/setup-crashplan-for-small-business-using-docker-on-a-synology-nas/</id>
    <published>2018-07-20T16:05:42.000Z</published>
    <updated>2018-07-20T16:05:42.000Z</updated>
    
    <content type="html"><![CDATA[<p>Since CrashPlan for Home is about to close down, I had to swith to a new solution. I opted for staying with CrashPlan since it works pretty darn well and I can still run it directly on my NAS. As always, I rely on other peoples work and in this case I’ve chosen the well maintained solution by <a href="https://github.com/jlesage/docker-crashplan-pro" target="_blank" rel="noopener">Jocelyn</a> who also maintains other interesting Docker <a href="https://jlesage.github.io/docker-apps/" target="_blank" rel="noopener">packages</a>.</p><p>This Dockerized version means running both the server and the client inside the Docker container. This means the installation process is much simpler than when they are split, as in my previous versions. Instead the UI is exposed using VNC and can be used directly from a browser or by connecting a VNC client.</p><p>Whenever the base CrashPlan is updated, I expect Jocelyn to release an updated image for me to install. At least quicker than I would do myself.</p><p>This guide assumes some basic knowledge of Crashplan and the service. Prior to this I initiated my migration request from Home to Pro on their website. It did fail for some reason but I managed to get help via their chat to quickly resolve that issue. As a Home subscriber, they have an offer of 1 client for $3/month for one year and then up to $10 after that. Regardless it is a very good price for unlimited storage as my Home subscription had over 6TB before I switched.</p><img src="/2018/07/20/setup-crashplan-for-small-business-using-docker-on-a-synology-nas/a192f0d6-33b3-409d-834c-22f26da324da.jpg" class=""><h2 id="Creating-the-docker-compose-yml-file"><a href="#Creating-the-docker-compose-yml-file" class="headerlink" title="Creating the docker-compose.yml file"></a>Creating the docker-compose.yml file</h2><p>Read up on the different features of the image on the GitHub project linked above.</p><p>As I install this on an older Synology (DSM 6.1), my version of docker and docker-compose support to version 2 of the compose file format, not that it matters in this case.</p><p>I create a service named “crashplan” but naming the actual container instance “crashplan-pro”. Other important settings are the Volume mappings and the Memory allocation for the Java runtime which is set to 3 Gigabytes in my case. I am redirecting the configuration path to outside the container as well, which will make container upgrades easier and also backup-able.</p><p>The hostname is used to get a display friendly name within CrashPlan device list.</p><p>Note that I’m mounting my volumes as read-only, which will fail a possible future restore process. Either mount the volumes are rw directly (by omitting the “:ro”) or change whenever you do a restore. In that case, remember to destroy and re-create the container first, as the compose settings are maintainted by instance. This is easiest done by “sudo docker-compose down” followed by a “sudo docker-compose up -d”.</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">version:</span> <span class="string">'2'</span></span><br><span class="line"><span class="symbol">services:</span></span><br><span class="line"><span class="symbol">  crashplan:</span></span><br><span class="line"><span class="symbol">    hostname:</span> docker-crashplan-synods01</span><br><span class="line"><span class="symbol">    container_name:</span> crashplan-pro</span><br><span class="line"><span class="symbol">    image:</span> jlesage/crashplan-pro</span><br><span class="line"><span class="symbol">    restart:</span> unless-stopped</span><br><span class="line"><span class="symbol">    environment:</span></span><br><span class="line">      - TZ=Europe/Stockholm</span><br><span class="line">      - KEEP_APP_RUNNING=<span class="number">1</span></span><br><span class="line">      - CRASHPLAN_SRV_MAX_MEM=<span class="number">3</span>G</span><br><span class="line"><span class="symbol">    ports:</span></span><br><span class="line">      - <span class="string">"5800:5800"</span></span><br><span class="line"><span class="symbol">    volumes:</span></span><br><span class="line">      - <span class="string">"/volume4/docker/crashplan/config:/config"</span></span><br><span class="line">      - <span class="string">"/volume2:/volume2:ro"</span></span><br><span class="line">      - <span class="string">"/volume3:/volume3:ro"</span></span><br><span class="line">      - <span class="string">"/volume4:/volume4:ro"</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure><img src="/2018/07/20/setup-crashplan-for-small-business-using-docker-on-a-synology-nas/creating-the-docker-composeyml-file.png" class=""><p>Since I use my Synology as a Docker host, I’ve created the local folder structure as this:</p><p>In the root folder for the Docker, remember to pre-create any mapped folders first, such as the local mapped “config” folder. I’m placing my compose file and upgrade script (lazy version) in the same folder.</p><p>Whenever the configuration is done, start the container by: “sudo docker-compose up -d” from the terminal. You can watch any logs from the Synology Docker UI, it will show up as “crashplan-pro” in the list of running containers.</p><img src="/2018/07/20/setup-crashplan-for-small-business-using-docker-on-a-synology-nas/8dd5d7ee-1c42-44bc-abed-7de03436220f.png" class=""><p>Navigate to the host ip on port 5800 which will utilize the built-in VNC over HTTP service in the container.</p><p>Log in using your CrashPla Pro credentials.</p><img src="/2018/07/20/setup-crashplan-for-small-business-using-docker-on-a-synology-nas/43d1519c-7970-4da0-a700-c45e0dec5ccb.png" class=""><p>If you haven’t any existing backups defined, this is the welcome screen. Since my existing solution exceeds the migration limit of 1TB, I’m opting for the Add New button.</p><img src="/2018/07/20/setup-crashplan-for-small-business-using-docker-on-a-synology-nas/f84e89f2-2ea2-4c89-b9cb-d062aab4e8f3.png" class=""><p>I’m reusing my existing key</p><img src="/2018/07/20/setup-crashplan-for-small-business-using-docker-on-a-synology-nas/4336e716-2c29-4f62-a446-1cfd96d1c93b.png" class=""><p>Which I copy via the clipboard feature, which means clicking the button in the right-most corner.</p><img src="/2018/07/20/setup-crashplan-for-small-business-using-docker-on-a-synology-nas/b5c9211d-3b7d-4447-9b89-a786ed8eb12d.png" class=""><p>When all set, I click OK</p><img src="/2018/07/20/setup-crashplan-for-small-business-using-docker-on-a-synology-nas/aed675c7-3eb1-4b38-bdc6-c793271b8e41.png" class=""><p>I’m greeted with my existing devices from my previous Home account. I need to make sure to delete these when I’m finished as each device incurs a cost.</p><p>Make sure to specify the hostname for the container as this is used by the Crashplan client for the device list.</p><img src="/2018/07/20/setup-crashplan-for-small-business-using-docker-on-a-synology-nas/862bc0b0-3322-49dd-b08b-a79bdb7c1ee0.png" class=""><h2 id="Setting-global-defaults"><a href="#Setting-global-defaults" class="headerlink" title="Setting global defaults"></a>Setting global defaults</h2><p>To save some time, ensure to set default values before configuring. Make sure to hit the “Save” button at the very low end of the window, also ensure to push the configuration to the clients.</p><img src="/2018/07/20/setup-crashplan-for-small-business-using-docker-on-a-synology-nas/setting-global-defaults.png" class=""><h3 id="File-exclusions"><a href="#File-exclusions" class="headerlink" title="File exclusions"></a>File exclusions</h3><img src="/2018/07/20/setup-crashplan-for-small-business-using-docker-on-a-synology-nas/file-exclusions.png" class=""><h3 id="Custom-archive-encryption-key"><a href="#Custom-archive-encryption-key" class="headerlink" title="Custom archive encryption key"></a>Custom archive encryption key</h3><img src="/2018/07/20/setup-crashplan-for-small-business-using-docker-on-a-synology-nas/custom-archive-encryption-key.png" class=""><h2 id="Backup-Sets"><a href="#Backup-Sets" class="headerlink" title="Backup Sets"></a>Backup Sets</h2><p>This is the view for creating backup sets. By default only one is listed here.</p><img src="/2018/07/20/setup-crashplan-for-small-business-using-docker-on-a-synology-nas/backup-sets.png" class=""><img src="/2018/07/20/setup-crashplan-for-small-business-using-docker-on-a-synology-nas/2365c3d8-f9d3-4ae9-9493-59d7501be35b.png" class=""><img src="/2018/07/20/setup-crashplan-for-small-business-using-docker-on-a-synology-nas/9ff3005e-cd09-4ea6-bd55-1282d35ce948.png" class=""><h3 id="Adding-Backup-sets"><a href="#Adding-Backup-sets" class="headerlink" title="Adding Backup sets"></a>Adding Backup sets</h3><p>I was a bit worried before finding this feature.</p><img src="/2018/07/20/setup-crashplan-for-small-business-using-docker-on-a-synology-nas/adding-backup-sets.png" class=""><img src="/2018/07/20/setup-crashplan-for-small-business-using-docker-on-a-synology-nas/88544f7a-e5e7-42a9-bf13-ba3f2a7be869.png" class=""><h2 id="Setting-priority"><a href="#Setting-priority" class="headerlink" title="Setting priority"></a>Setting priority</h2><img src="/2018/07/20/setup-crashplan-for-small-business-using-docker-on-a-synology-nas/setting-priority.png" class=""><img src="/2018/07/20/setup-crashplan-for-small-business-using-docker-on-a-synology-nas/75210efb-f4b0-4c4d-a90a-e5dbdafc961b.png" class=""><h2 id="Exceeding-inotify’s-max-watch-limit"><a href="#Exceeding-inotify’s-max-watch-limit" class="headerlink" title="Exceeding inotify’s max watch limit"></a>Exceeding inotify’s max watch limit</h2><p>This error is bound to pop-up if you backup a significant amount of files. Fix by editing a configuration file as described below.</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ERROR: </span>CrashPlan for Small Business is exceeding inotify's max watch limit. Real-time file watching cannot work properly.  The inotify watch limit needs to be increased on the host.stdout</span><br><span class="line"> </span><br></pre></td></tr></table></figure><img src="/2018/07/20/setup-crashplan-for-small-business-using-docker-on-a-synology-nas/exceeding-inotify-s-max-watch-limit.png" class=""><p>To read up on the cause and mitigation, please read here: <a href="https://support.code42.com/CrashPlan/4/Troubleshooting/Linux_real-time_file_watching_errors" target="_blank" rel="noopener">https://support.code42.com/CrashPlan/4/Troubleshooting/Linux_real-time_file_watching_errors</a></p><p>On a Synology, add the setting to the /etc.defaults/sysctl.conf file. Press “i” to enter edit mode and when finished press “esc” and then type “:wq” for “write” and “quit” respectively.</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="keyword">vi</span> /etc.defaults/sysctl.<span class="keyword">conf</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>The number is just taken from the example, I don’t know what the proper number is yet.</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">fs.inotify.max_user_watches</span>=<span class="number">1048576</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure><img src="/2018/07/20/setup-crashplan-for-small-business-using-docker-on-a-synology-nas/a0eaad51-a67c-4ea5-b618-1c5afaf12fb1.png" class=""><h2 id="Deactivate-a-device"><a href="#Deactivate-a-device" class="headerlink" title="Deactivate a device"></a>Deactivate a device</h2><img src="/2018/07/20/setup-crashplan-for-small-business-using-docker-on-a-synology-nas/deactivate-a-device.png" class=""><img src="/2018/07/20/setup-crashplan-for-small-business-using-docker-on-a-synology-nas/08d14ade-b70c-446a-8eea-ecd792f2382f.png" class="">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Since CrashPlan for Home is about to close down, I had to swith to a new solution. I opted for staying with CrashPlan since it works pret
      
    
    </summary>
    
    
      <category term="docker" scheme="https://blog.rylander.io/tags/docker/"/>
    
      <category term="synology" scheme="https://blog.rylander.io/tags/synology/"/>
    
      <category term="crashplan" scheme="https://blog.rylander.io/tags/crashplan/"/>
    
  </entry>
  
  <entry>
    <title>Install PLEX on Synology NAS Using Docker Compose</title>
    <link href="https://blog.rylander.io/2018/01/09/install-plex-on-synology-nas-using-docker-compose/"/>
    <id>https://blog.rylander.io/2018/01/09/install-plex-on-synology-nas-using-docker-compose/</id>
    <published>2018-01-09T19:41:23.000Z</published>
    <updated>2018-01-09T19:41:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is an updated writeup of setting up PLEX Server using Docker Compose on a Synology NAS. Actually there is nothing specific about Synology rather than mapped folder paths. The <a href="http://blog.rylander.io/2016/11/19/install-plex-on-synology-nas-using-docker/">previous</a> setup uses the Synology UI but this version uses docker-compose, which is based on a configuration file. The running docker container instance will be visible in the Synology Docker UI and can also be controlled from there.</p><p>I’m using the release from Linuxserver <a href="https://github.com/linuxserver/docker-plex" target="_blank" rel="noopener">https://github.com/linuxserver/docker-plex</a> as documented.</p><img src="/2018/01/09/install-plex-on-synology-nas-using-docker-compose/6db3de48-4e6d-4a01-bd7e-d604ddde6802.png" class=""><h2 id="docker-compose-yml"><a href="#docker-compose-yml" class="headerlink" title="docker-compose.yml"></a>docker-compose.yml</h2><p>Docker Compose uses a configuration file which is used instead of setting paramters via UI och cli. The advantage of a configuration file is it is very portable/movable and also resistant to UI crashes on Synology (which is the reason for this post as it happened to me now).</p><p>The ports to expose are <a href="https://support.plex.tv/hc/en-us/articles/201543147-What-network-ports-do-I-need-to-allow-through-my-firewall-" target="_blank" rel="noopener">documented</a> on the Plex support site. </p><p>The environment node variables should be updated to reflect your preferences.</p><p>The volumes section is the most relevant:</p><p>/config - I’ve chosen to export the Plex configuration folder on my local NAS share for easy access</p><p>Mandatory is to let Plex access your media folders. The right side of the : is used for the container internal path, which for the library always starts with “/data/media” and then append your chose name. The left side is your absolute path to your media files.</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">version: '2'</span><br><span class="line">services:</span><br><span class="line">  linuxserver-plex:</span><br><span class="line">    container_name: linuxserver-plex</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    image: linuxserver/plex:latest</span><br><span class="line">    environment: </span><br><span class="line">    - TZ=Europe/Stockholm</span><br><span class="line">    - VERSION=latest</span><br><span class="line">    ports:</span><br><span class="line">    - "32400:32400" #(for access to the Plex Media Server) [required]</span><br><span class="line">    - "32400:32400/udp"</span><br><span class="line">    - "32410:32410/udp" #(for current GDM network discovery)</span><br><span class="line">    - "32412:32412/udp" </span><br><span class="line">    - "32413:32413/udp" </span><br><span class="line">    - "32414:32414/udp"</span><br><span class="line">    - "32469:32469" #(for access to the Plex DLNA Server)</span><br><span class="line">    - "32469:32469/udp"</span><br><span class="line">    - "5353:5353" # (for older Bonjour/Avahi network discovery)</span><br><span class="line">    #- "1900:1900/udp" #(for access to the Plex DLNA Server)</span><br><span class="line"></span><br><span class="line">    volumes:</span><br><span class="line">    - /volume4/docker/plex:/config</span><br><span class="line">    - /volume2/media2:/data/movies2</span><br><span class="line">    - /volume3/media/movies/[MOVIES]:/data/movies/MOVIES</span><br><span class="line">    - /volume3/media/movies/[BARN]:/data/movies/BARN</span><br><span class="line">    - /volume3/media/movies/[3D]:/data/movies/3D</span><br><span class="line">    - /volume3/media/[TV]:/data/tv</span><br></pre></td></tr></table></figure><img src="/2018/01/09/install-plex-on-synology-nas-using-docker-compose/docker-composeyml.png" class=""><p>The folder structure created when running Plex the first time. Note I’ve placed the docker-compose.yml file in the same folder, a convention rather than a rule. </p><img src="/2018/01/09/install-plex-on-synology-nas-using-docker-compose/3f39d386-1c29-42e0-adbe-923425a0abc5.png" class=""><h2 id="Starting-and-Stopping"><a href="#Starting-and-Stopping" class="headerlink" title="Starting and Stopping"></a>Starting and Stopping</h2><p>To start the container, place the docker-compose.yml file in the Plex folder I assume you have created as your Plex folder on the Docker host. In case of a Synology NAS, I’ve opted to place it in the same folder I export my Plex folders to.</p><p>Initial start, just to check for errors, you can type (sudo is neccessary on a Synology NAS):</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker-compose up</span><br></pre></td></tr></table></figure><p>If everything works as expected, you can stop and cleanup using:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker-compose down</span><br></pre></td></tr></table></figure><p>The <em>down</em> command will also cleanup and remove the container.</p><p>Then to start it headless:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker-compose up -d</span><br></pre></td></tr></table></figure><p>Browse <a href="http://plex.rylander.io:32400/web/" target="_blank" rel="noopener">http://plex.rylander.io:32400/web/</a> or whatever url you have in your setup.  </p><img src="/2018/01/09/install-plex-on-synology-nas-using-docker-compose/starting-and-stopping.png" class=""><h2 id="Updating-the-docker-image"><a href="#Updating-the-docker-image" class="headerlink" title="Updating the docker image"></a>Updating the docker image</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo docker-compose down</span><br><span class="line">sudo docker pull linuxserver/plex:latest</span><br><span class="line">sudo docker-compose up -d</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;This is an updated writeup of setting up PLEX Server using Docker Compose on a Synology NAS. Actually there is nothing specific about Syn
      
    
    </summary>
    
    
      <category term="docker" scheme="https://blog.rylander.io/tags/docker/"/>
    
      <category term="plex" scheme="https://blog.rylander.io/tags/plex/"/>
    
      <category term="synology" scheme="https://blog.rylander.io/tags/synology/"/>
    
  </entry>
  
  <entry>
    <title>Setup Split VPN on Unifi USG Using PBR</title>
    <link href="https://blog.rylander.io/2018/01/07/setup-split-vpn-on-unifi-usg-using-pbr/"/>
    <id>https://blog.rylander.io/2018/01/07/setup-split-vpn-on-unifi-usg-using-pbr/</id>
    <published>2018-01-07T20:28:34.000Z</published>
    <updated>2018-01-07T20:28:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is a writeup for setting up a client OpenVPN (or any other VPN type) connection, but only use it for some clients/VLANS. I’m setting things up using a Unifi USG and the special config file. Since the UI is currently not supported for client OpenVPN configuration, although support is on the roadmap, this will show it is actually quite easy to setup.</p><p>As the UI is not yet supporting the configuration, the neccessary configuration needs to be entered into the special config.gateway.json file on the controller. The usual way to do this is to use the cli on the USG, do the configuration and then export the json and copy parts of it to the config.gateway.json file. I’ve done this, so you can easily just copy from my configuration and then edit the parts you want.</p><p>I’m reusing the work from Travis Cook’s <a href="https://github.com/TravisCook/Detour" target="_blank" rel="noopener">Detour</a> in order to be able to select which device is using the VPN tunnel. It is making use of PBR and provides a UI to add predefined clients (really their IP address) to the list of IPs that are routed via the VPN. I’m using this mostly to access Netflix and similar services from ATVs and the like. I actually use a pptp VPN due to speed, but OpenVPN does perform with a single stream.</p><p>Known caveats: Som earlier revision of the USG firmware had a broken PBR. Guess how I know this!</p><img src="/2018/01/07/setup-split-vpn-on-unifi-usg-using-pbr/15a5add2-233c-465d-9d6b-78628d214491.jpg" class=""><h2 id="Get-familiar-with-the-config-json-structure-on-the-USG"><a href="#Get-familiar-with-the-config-json-structure-on-the-USG" class="headerlink" title="Get familiar with the config.json structure on the USG"></a>Get familiar with the config.json structure on the USG</h2><p>To get a formatted copy of the config.json file on your controller, you can dump the current configuration from your USG into a formatted file. Login to the USG and use the existing utility to create the file. I named my file with the suffix .json since I want my text editor to help out with formatting. Transfer the file back your computer for easy editing. I’m using Transmit since I’m on a Mac. Once the file is on your computer, use your favorite editing tool to open it. I use Visual Studio Code.</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh <span class="symbol">admin@</span><span class="number">10.0</span><span class="number">.1</span><span class="number">.1</span>*</span><br><span class="line">mca-ctrl -t dump-cfg &gt; config.json*</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p><em>To have the whole thing collapse, Ctrl/Cmd-K + Ctl/Cmd-0</em></p><p>*This way you see the top most nodes and their relative structure. In our own file, we will add configuration to several nodes, but not all and we can therefore copy the nodes we need including their structure. *</p><img src="/2018/01/07/setup-split-vpn-on-unifi-usg-using-pbr/get-familiar-with-the-configjson-structure-on-the-usg.png" class=""><h3 id="Location-of-the-config-gateway-json-file"><a href="#Location-of-the-config-gateway-json-file" class="headerlink" title="Location of the config.gateway.json file"></a>Location of the config.gateway.json file</h3><p>So the Unifi Controller provides an easy way to inject additional configuration. The location is site specific.</p><p>Since I’m running the Controller in a Docker container, I’ve chosen to expose most data and configuration outside of the container instance and I’m using a plain share since I’m hosting my Docker on a Synology NAS.</p><p>The controller merges this configuration when provisioning the USG device. If there are errors in this file, the provisioning process may end up in a loop so make sure to check the logs and the alert view in the Controller. I export all USG logs to a syslog server, which is handy to check for errors. You can also check the logs locally on the USG.</p><img src="/2018/01/07/setup-split-vpn-on-unifi-usg-using-pbr/location-of-the-configgatewayjson-file.png" class=""><h2 id="Overview-of-the-OpenVPN-settings-on-the-USG"><a href="#Overview-of-the-OpenVPN-settings-on-the-USG" class="headerlink" title="Overview of the OpenVPN settings on the USG"></a>Overview of the OpenVPN settings on the USG</h2><p>I highly recommend to only configure the OpenVPN connection first, to ensure the VPN actually works before proceeding with anything. </p><p>The OpenVPN configuration is placed into a local file on the USG. An additional credentials file is created.</p><p>Create the folder /config/openvpn on the USG</p><p>We place two files within this directory:</p><ul><li>The credentials file containing username and password</li><li>The client configuration file, specific to your chosen OpenVPN provider</li></ul><p>The OpenVPN client configuration is specific to your provider. I use Giganews/VyprVPN and the settings are retrieved from their sample files. I did need to add configuration to not pull and overwrite my Gateway and routing settings.</p><p>Actually we have three files, where one is copy of the other. Since I have several configuration files, I just copy the current file over the generic one. Initially I did want to use a symbolic link, but that didn’t work as expected.</p><img src="/2018/01/07/setup-split-vpn-on-unifi-usg-using-pbr/overview-of-the-openvpn-settings-on-the-usg.png" class=""><h3 id="Create-the-credentials-file"><a href="#Create-the-credentials-file" class="headerlink" title="Create the credentials file"></a>Create the credentials file</h3><p>Create the file /config/openvpn/password_filename. Provide you own username/password on two separate lines.</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">username</span></span><br><span class="line"><span class="attribute">password</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure><img src="/2018/01/07/setup-split-vpn-on-unifi-usg-using-pbr/create-the-credentials-file.png" class=""><h3 id="Create-the-configuration-file-for-openvpn"><a href="#Create-the-configuration-file-for-openvpn" class="headerlink" title="Create the configuration file for openvpn"></a>Create the configuration file for openvpn</h3><p>Create the file /config/openvpn/gateway.ovpn containing the following:</p><p>I added the route-noexec parameter in order to block the VPN from overwriting my default routes and gateway settings.</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">#  _____ <span class="keyword">_</span>         _____               </span><br><span class="line"># |   <span class="type">__</span>|<span class="type">_</span>|<span class="type">___</span> ___|   <span class="type">| |___</span> <span class="keyword">_</span> <span class="keyword">_</span> <span class="keyword">_</span> ___ </span><br><span class="line"># |  <span class="type">|  | | . | .'| | | | -_</span>| <span class="type">| | |_</span> -|<span class="type"></span></span><br><span class="line"><span class="type"># |_____</span>|<span class="type">_</span>|<span class="type">_</span>  |<span class="type">__</span>,|<span class="type">_</span>|<span class="type">___</span>|<span class="type">___</span>|<span class="type">_____</span>|<span class="type">___</span>|<span class="type"></span></span><br><span class="line"><span class="type">#         |___</span>|                        <span class="type"></span></span><br><span class="line"><span class="type"></span></span><br><span class="line"><span class="type">client</span></span><br><span class="line">dev tun</span><br><span class="line">proto udp</span><br><span class="line">remote us5.vpn.giganews.com <span class="number">443</span></span><br><span class="line">resolv-retry infinite</span><br><span class="line">nobind</span><br><span class="line">persist-key</span><br><span class="line">persist-tun</span><br><span class="line">persist-remote-ip</span><br><span class="line">;ca ca.vyprvpn.com.crt</span><br><span class="line">tls-remote us5.vpn.giganews.com</span><br><span class="line">auth-user-pass /config/openvpn/giganewsauth.txt</span><br><span class="line">comp-lzo</span><br><span class="line">verb <span class="number">3</span></span><br><span class="line">auth SHA256</span><br><span class="line">cipher AES<span class="number">-256</span>-CBC</span><br><span class="line">keysize <span class="number">256</span></span><br><span class="line">tls-cipher DHE-RSA-AES256-SHA:DHE-DSS-AES256-SHA:AES256-SHA</span><br><span class="line">route-noexec</span><br><span class="line">#route-nopull</span><br><span class="line"></span><br><span class="line">&lt;ca&gt;</span><br><span class="line">-----BEGIN CERTIFICATE-----</span><br><span class="line">MIIEpDCCA4ygAwIBAgIJANd2Uwt7SabsMA0GCSqGSIb3DQEBBQUAMIGSMQswCQYD</span><br><span class="line">VQQGEwJLWTEUMBIGA1UECBMLR3JhbmRDYXltYW4xEzARBgNVBAcTCkdlb3JnZVRv</span><br><span class="line">d24xFzAVBgNVBAoTDkdvbGRlbkZyb2ctSW5jMRowGAYDVQQDExFHb2xkZW5Gcm9n</span><br><span class="line">LUluYyBDQTEjMCEGCSqGSIb3DQEJARYUYWRtaW5AZ29sZGVuZnJvZy5jb20wHhcN</span><br><span class="line">MTAwNDA5MjExOTIxWhcNMjAwNDA2MjExOTIxWjCBkjELMAkGA1UEBhMCS1kxFDAS</span><br><span class="line">BgNVBAgTC0dyYW5kQ2F5bWFuMRMwEQYDVQQHEwpHZW9yZ2VUb3duMRcwFQYDVQQK</span><br><span class="line">Ew5Hb2xkZW5Gcm9nLUluYzEaMBgGA1UEAxMRR29sZGVuRnJvZy1JbmMgQ0ExIzAh</span><br><span class="line">BgkqhkiG9w0BCQEWFGFkbWluQGdvbGRlbmZyb2cuY29tMIIBIjANBgkqhkiG9w0B</span><br><span class="line">AQEFAAOCAQ8AMIIBCgKCAQEA37JesfCwOj69el0AmqwXyiUJ2Bm+q0+eR9hYZEk7</span><br><span class="line">pVoj5dF9RrKirZyCM/<span class="number">9</span>zEvON5z4pZMYjhpzrq6eiLu3j1xV6lX73Hg0dcflweM5i</span><br><span class="line">qxFAHCwEFIiMpPwOgLV399sfHCuda11boIPE4SRooxUPEju908AGg/i+egntvvR2</span><br><span class="line">d7pnZl2SCJ1sxlbeAAkYjX6EXmIBFyJdmry1y05BtpdTgPmTlJ0cMj7DlU+<span class="number">2</span>gehP</span><br><span class="line">ss/q6YYRAhrKtlZwxeunc+RD04ieah+boYU0CBZinK2ERRuAjx3hbCE4b0S6eizr</span><br><span class="line">QmSuGFNu6Ghx+E1xasyl1Tz/fHgHl3P93Jf0tFov7uuygQIDAQABo4H6MIH3MB0G</span><br><span class="line">A1UdDgQWBBTh9HiMh5RnRVIt/ktXddiGkDkXBTCBxwYDVR0jBIG/MIG8gBTh9HiM</span><br><span class="line">h5RnRVIt/ktXddiGkDkXBaGBmKSBlTCBkjELMAkGA1UEBhMCS1kxFDASBgNVBAgT</span><br><span class="line">C0dyYW5kQ2F5bWFuMRMwEQYDVQQHEwpHZW9yZ2VUb3duMRcwFQYDVQQKEw5Hb2xk</span><br><span class="line">ZW5Gcm9nLUluYzEaMBgGA1UEAxMRR29sZGVuRnJvZy1JbmMgQ0ExIzAhBgkqhkiG</span><br><span class="line"><span class="number">9</span>w0BCQEWFGFkbWluQGdvbGRlbmZyb2cuY29tggkA13ZTC3tJpuwwDAYDVR0TBAUw</span><br><span class="line">AwEB/zANBgkqhkiG9w0BAQUFAAOCAQEAwihrN0QNE19RRvGywBvsYDmzmM5G8ta5</span><br><span class="line"><span class="number">8</span>yB+<span class="number">02</span>Mzbm0KuVxnPJaoVy4L4WocAnqLeKfmpYWUid1MPwDPtwtQ00U7QmRBRNLU</span><br><span class="line">hS6Bth1wXtuDvkRoHgymSvg1+wonJNpv/VquNgwt7XbC9oOjVEd9lbUd+ttxzboI</span><br><span class="line"><span class="number">8</span>P1ci6+I861PylA0DOv9j5bbn1oE0hP8wDv3bTklEa612zzEVnnfgw+ErVnkrnk8</span><br><span class="line"><span class="number">8</span>fTiv6NZtHgUOllMq7ymlV7ut+BPp20rjBdOCNn2Q7dNCKIkI45qkwHtXjzFXIxz</span><br><span class="line">Gq3tLVeC54g7XZIc7X0S9avgAE7h9SuRYmsSzvLTtiP1obMCHB5ebQ==</span><br><span class="line">-----END CERTIFICATE-----</span><br><span class="line">&lt;/ca&gt;</span><br><span class="line"> </span><br></pre></td></tr></table></figure><img src="/2018/01/07/setup-split-vpn-on-unifi-usg-using-pbr/create-the-configuration-file-for-openvpn.png" class=""><h3 id="Adding-openvpn-node-to-interfaces"><a href="#Adding-openvpn-node-to-interfaces" class="headerlink" title="Adding openvpn node to interfaces"></a>Adding openvpn node to interfaces</h3><p>This is the only required change to the config.gateway.json file neccessary to test the OpenVPN client on the USG. Naturally the configuration file must be in place and correct for this to work.</p><p>If your config.gateway.json file was empty before this, this is the only content you need. Make sure it is valid json.</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"interfaces"</span>: &#123;</span><br><span class="line">        <span class="attr">"openvpn"</span>: &#123;</span><br><span class="line">            <span class="attr">"vtun0"</span>: &#123;</span><br><span class="line">                <span class="attr">"description"</span>: <span class="string">"Giganews OpenVPN"</span>,</span><br><span class="line">                <span class="attr">"config-file"</span>: <span class="string">"/config/openvpn/gateway.ovpn"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br></pre></td></tr></table></figure><img src="/2018/01/07/setup-split-vpn-on-unifi-usg-using-pbr/adding-openvpn-node-to-interfaces.png" class=""><h3 id="Verifying"><a href="#Verifying" class="headerlink" title="Verifying"></a>Verifying</h3><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh <span class="symbol">admin@</span><span class="number">10.0</span><span class="number">.1</span><span class="number">.1</span></span><br><span class="line">show <span class="built_in">int</span>erfaces</span><br><span class="line"> </span><br></pre></td></tr></table></figure><img src="/2018/01/07/setup-split-vpn-on-unifi-usg-using-pbr/verifying.png" class=""><h2 id="Overview-of-the-changes-to-config-gateway-json"><a href="#Overview-of-the-changes-to-config-gateway-json" class="headerlink" title="Overview of the changes to config.gateway.json"></a>Overview of the changes to config.gateway.json</h2><p>My existing config.gateway.json already contains configuration to host names, in order to ease initial setup and point static host names to my specific subnet and ip (setup.ubnt.com -&gt; USG ip). I do L3 adoption in additon to running inside Docker, which is problematic in the initial setup process for a USG.</p><p><strong>Interfaces</strong></p><p>We will add a new interface, a openvpn node and specifically vtun0 interface. We could add the configuration inside this node, but it is easier to just point out a specific configuration file which lives on the USG. This way we can make changes and updates and not need to reprovision anything.</p><p>We also need to specify which <em>modify</em> rule on our existing LAN configuration, which allows us to reroute all requests from inside our LAN which comes from specific ip addresses.</p><p><strong>Firewall</strong></p><p>In the firewall node we add a named group, which we will dynamically populate with ip addresses we want to reroute, thanks to the UI from Detour. If you don’t use Detour, you can instead add specific addresses or a range.</p><p>We also specify the actual named <em>modify</em> logic, which reroutes based on source ip.</p><p><strong>Protocols</strong></p><p>The protocols section contains the actual routing information used by the above <em>modify</em> firewall rule. Since we want to only reroute traffic for some devices, we define a separate interface-route to use in those cases. All other traffic is using the default routing and gateway.</p><p><strong>Service</strong></p><p>The service node contains the masquerade nat rule for the VPN. This magically solves how traffic sent out from the VPN makes it back through to us.</p><img src="/2018/01/07/setup-split-vpn-on-unifi-usg-using-pbr/overview-of-the-changes-to-configgatewayjson.png" class=""><h3 id="The-config-gateway-json-configuration"><a href="#The-config-gateway-json-configuration" class="headerlink" title="The config.gateway.json configuration"></a>The config.gateway.json configuration</h3><p>The USG is not allowing an empty value for the firewall group address-group node, so I’ve put an initial value there to get passed this bug. This may change in future firmware upgrades. If the configuration cannot be set on the USG, the controller provision process goes into an endless loop of trying to applying the configuration.</p><p>eth1 is my LAN port</p><p>The nat rule can actually be done via UI, but I’m including it here to keep all settings in one place. Make sure all keys and index number are free to use and adjust if neccessary.</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"firewall"</span>: &#123;</span><br><span class="line">        <span class="attr">"group"</span>: &#123;</span><br><span class="line">            <span class="attr">"address-group"</span>: &#123;</span><br><span class="line">                <span class="attr">"vypr_nyc"</span>: &#123;</span><br><span class="line">                    <span class="attr">"address"</span>: [</span><br><span class="line">                        <span class="string">"10.0.1.254"</span></span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"modify"</span>: &#123;</span><br><span class="line">            <span class="attr">"detour"</span>: &#123;</span><br><span class="line">                <span class="attr">"rule"</span>: &#123;</span><br><span class="line">                    <span class="attr">"10"</span>: &#123;</span><br><span class="line">                        <span class="attr">"action"</span>: <span class="string">"modify"</span>,</span><br><span class="line">                        <span class="attr">"description"</span>: <span class="string">"Detour route to Giganews/Vypr VPN"</span>,</span><br><span class="line">                        <span class="attr">"modify"</span>: &#123;</span><br><span class="line">                            <span class="attr">"table"</span>: <span class="string">"1"</span></span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="attr">"source"</span>: &#123;</span><br><span class="line">                            <span class="attr">"group"</span>: &#123;</span><br><span class="line">                                <span class="attr">"address-group"</span>: <span class="string">"vypr_nyc"</span></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"interfaces"</span>: &#123;</span><br><span class="line">        <span class="attr">"ethernet"</span>: &#123;</span><br><span class="line">            <span class="attr">"eth1"</span>: &#123;</span><br><span class="line">                <span class="attr">"firewall"</span>: &#123;</span><br><span class="line">                    <span class="attr">"in"</span>: &#123;</span><br><span class="line">                        <span class="attr">"modify"</span>: <span class="string">"detour"</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">"openvpn"</span>: &#123;</span><br><span class="line">            <span class="attr">"vtun0"</span>: &#123;</span><br><span class="line">                <span class="attr">"description"</span>: <span class="string">"Giganews OpenVPN"</span>,</span><br><span class="line">                <span class="attr">"config-file"</span>: <span class="string">"/config/openvpn/gateway.ovpn"</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"protocols"</span>: &#123;</span><br><span class="line">        <span class="attr">"static"</span>: &#123;</span><br><span class="line">            <span class="attr">"table"</span>: &#123;</span><br><span class="line">                <span class="attr">"1"</span>: &#123;</span><br><span class="line">                    <span class="attr">"interface-route"</span>: &#123;</span><br><span class="line">                        <span class="attr">"0.0.0.0/0"</span>: &#123;</span><br><span class="line">                            <span class="attr">"next-hop-interface"</span>: &#123;</span><br><span class="line">                                <span class="attr">"vtun0"</span>: <span class="string">"''"</span></span><br><span class="line">                            &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"service"</span>: &#123;</span><br><span class="line">        <span class="attr">"nat"</span>: &#123;</span><br><span class="line">            <span class="attr">"rule"</span>: &#123;</span><br><span class="line">                <span class="attr">"5004"</span>: &#123;</span><br><span class="line">                    <span class="attr">"description"</span>: <span class="string">"Masquerade for Giganews OpenVPN"</span>,</span><br><span class="line">                    <span class="attr">"outbound-interface"</span>: <span class="string">"vtun0"</span>,</span><br><span class="line">                    <span class="attr">"type"</span>: <span class="string">"masquerade"</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br></pre></td></tr></table></figure><h2 id="Restart-OpenVPN-client"><a href="#Restart-OpenVPN-client" class="headerlink" title="Restart OpenVPN client"></a>Restart OpenVPN client</h2><p>Sometimes you need to restart the OpenVPN client, which can be done by disabling and then enabling the interface like this. The commit statements are key here which will bounce the interface. </p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">configure</span><br><span class="line"><span class="keyword">set</span> interfaces openvpn vtun0 <span class="keyword">disable</span></span><br><span class="line"><span class="keyword">commit</span></span><br><span class="line"><span class="keyword">delete</span> interfaces openvpn vtun0 <span class="keyword">disable</span></span><br><span class="line"><span class="keyword">commit</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure><img src="/2018/01/07/setup-split-vpn-on-unifi-usg-using-pbr/restart-openvpn-client.png" class=""><h2 id="Quick-speedtest-result"><a href="#Quick-speedtest-result" class="headerlink" title="Quick speedtest result"></a>Quick speedtest result</h2><p>A quick speed test gives the following: Laptop -&gt; Wifi -&gt; USG -&gt; VPN -&gt; NYC USA endpoint -&gt; Stockholm Sweden and roundtrip.</p><img src="/2018/01/07/setup-split-vpn-on-unifi-usg-using-pbr/quick-speedtest-result.png" class="">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;This is a writeup for setting up a client OpenVPN (or any other VPN type) connection, but only use it for some clients/VLANS. I’m setting
      
    
    </summary>
    
    
      <category term="unifi" scheme="https://blog.rylander.io/tags/unifi/"/>
    
      <category term="vpn" scheme="https://blog.rylander.io/tags/vpn/"/>
    
      <category term="usg" scheme="https://blog.rylander.io/tags/usg/"/>
    
  </entry>
  
  <entry>
    <title>Install Nvm as a Oh-My-Zsh Plugin</title>
    <link href="https://blog.rylander.io/2017/11/13/install-nvm-as-a-oh-my-zsh-plugin/"/>
    <id>https://blog.rylander.io/2017/11/13/install-nvm-as-a-oh-my-zsh-plugin/</id>
    <published>2017-11-13T20:33:25.000Z</published>
    <updated>2017-11-13T20:33:25.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/lukechilds/zsh-nvm" target="_blank" rel="noopener">https://github.com/lukechilds/zsh-nvm</a></p><img src="/2017/11/13/install-nvm-as-a-oh-my-zsh-plugin/c93114c3-cf3a-411f-803d-2d2647b38d27.png" class=""><h2 id="Install-nvm-custom-oh-my-zsh-plugin"><a href="#Install-nvm-custom-oh-my-zsh-plugin" class="headerlink" title="Install nvm custom oh-my-zsh plugin"></a>Install nvm custom oh-my-zsh plugin</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> [https://github.com/lukechilds/zsh-nvm](https://github.com/lukechilds/zsh-nvm) ~/.oh-my-zsh/custom/plugins/zsh-nvm</span><br><span class="line"> </span><br></pre></td></tr></table></figure><img src="/2017/11/13/install-nvm-as-a-oh-my-zsh-plugin/install-nvm-custom-oh-my-zsh-plugin.png" class=""><h3 id="Add-to-plugin-list"><a href="#Add-to-plugin-list" class="headerlink" title="Add to plugin list"></a>Add to plugin list</h3><p>Make sure to place the plugin close to the top, in case other plugins rely on nvm/npm.</p><p>Add the nvm plugin to get tab completion goodies</p><img src="/2017/11/13/install-nvm-as-a-oh-my-zsh-plugin/add-to-plugin-list.png" class=""><h3 id="Lazy-load-nvm"><a href="#Lazy-load-nvm" class="headerlink" title="Lazy load nvm"></a>Lazy load nvm</h3><p>If you want to lazy load nvm, you can add this line before loading the zsh-nvm plugin. This will speedup the loading of zsh, but nvm will be loaded when it is required, thus delaying that initial run.</p><img src="/2017/11/13/install-nvm-as-a-oh-my-zsh-plugin/lazy-load-nvm.png" class=""><h3 id="First-time-kicks-off-installation-of-nvm"><a href="#First-time-kicks-off-installation-of-nvm" class="headerlink" title="First time kicks off installation of nvm"></a>First time kicks off installation of nvm</h3><p>The first time you launch, the plugin will initialize and install the nvm environment.</p><img src="/2017/11/13/install-nvm-as-a-oh-my-zsh-plugin/first-time-kicks-off-installation-of-nvm.png" class=""><h3 id="Tab-completion"><a href="#Tab-completion" class="headerlink" title="Tab completion"></a>Tab completion</h3><p>If you also installed the nvm plugin, tab will now be an ever more magical key.</p><img src="/2017/11/13/install-nvm-as-a-oh-my-zsh-plugin/tab-completion.png" class=""><h2 id="Upgrade-nvm"><a href="#Upgrade-nvm" class="headerlink" title="Upgrade nvm"></a>Upgrade nvm</h2><p>The zsh-nvm plugin adds helper methods, such as nvm upgrade.</p><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">nvm upgrade</span><br><span class="line"> </span><br></pre></td></tr></table></figure><img src="/2017/11/13/install-nvm-as-a-oh-my-zsh-plugin/upgrade-nvm.png" class=""><h2 id="List-available-nodejs-versions"><a href="#List-available-nodejs-versions" class="headerlink" title="List available nodejs versions"></a>List available nodejs versions</h2><p>To list available nodejs versions to install.</p><figure class="highlight ebnf"><table><tr><td class="code"><pre><span class="line"><span class="attribute">nvm ls-remote</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure><h2 id="Install-latest-nodejs-version"><a href="#Install-latest-nodejs-version" class="headerlink" title="Install latest nodejs version"></a>Install latest nodejs version</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line">nvm <span class="keyword">install</span> v9</span><br><span class="line"> </span><br></pre></td></tr></table></figure><img src="/2017/11/13/install-nvm-as-a-oh-my-zsh-plugin/install-latest-nodejs-version.png" class="">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://github.com/lukechilds/zsh-nvm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/lukechilds/zsh-nvm&lt;/a&gt;&lt;/p&gt;
&lt;img src=&quot;/2
      
    
    </summary>
    
    
      <category term="zsh" scheme="https://blog.rylander.io/tags/zsh/"/>
    
      <category term="nvm" scheme="https://blog.rylander.io/tags/nvm/"/>
    
  </entry>
  
  <entry>
    <title>Configure Zsh on macOS</title>
    <link href="https://blog.rylander.io/2017/11/13/configure-zsh-on-macos/"/>
    <id>https://blog.rylander.io/2017/11/13/configure-zsh-on-macos/</id>
    <published>2017-11-13T20:25:22.000Z</published>
    <updated>2017-11-13T20:25:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>What can I say, I’m such a sucker for eye candy I couldn’t resist installing the ZSH shell and the Agnoster theme.</p><p><a href="https://github.com/robbyrussell/oh-my-zsh/wiki/Installing-ZSH" target="_blank" rel="noopener">https://github.com/robbyrussell/oh-my-zsh/wiki/Installing-ZSH</a> </p><img src="/2017/11/13/configure-zsh-on-macos/9dca86d5-5db9-441e-9688-7e2711541680.png" class=""><h2 id="Install-ZSH"><a href="#Install-ZSH" class="headerlink" title="Install ZSH"></a>Install ZSH</h2><p>I use Homebrew to install utilities.</p><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>zsh zsh-completions</span><br><span class="line"> </span><br></pre></td></tr></table></figure><h3 id="Set-ZSH-as-default-shell"><a href="#Set-ZSH-as-default-shell" class="headerlink" title="Set ZSH as default shell"></a>Set ZSH as default shell</h3><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chsh -s <span class="constructor">$(<span class="params">which</span> <span class="params">zsh</span>)</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure><img src="/2017/11/13/configure-zsh-on-macos/set-zsh-as-default-shell.png" class=""><h3 id="Install-oh-my-zsh"><a href="#Install-oh-my-zsh" class="headerlink" title="Install oh-my-zsh"></a>Install oh-my-zsh</h3><p>oh-my-zsh is a package manager, the upside being themes support. There are others, but this is older, stable and still popular.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sh -c <span class="string">"<span class="variable">$(curl -fsSL https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)</span>"</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure><h2 id="Configure-color-scheme-for-iTerm2"><a href="#Configure-color-scheme-for-iTerm2" class="headerlink" title="Configure color scheme for iTerm2"></a>Configure color scheme for iTerm2</h2><p>Solarized is nice</p><img src="/2017/11/13/configure-zsh-on-macos/configure-color-scheme-for-iterm2.png" class=""><h3 id="Powerline-fonts"><a href="#Powerline-fonts" class="headerlink" title="Powerline fonts"></a>Powerline fonts</h3><p>Patched Powerline fonts are used by many advanced themes and provides useful icons. </p><p>Make sure the fonts have been installed correctly. Either you can install them manually or run the install.sh script.</p><img src="/2017/11/13/configure-zsh-on-macos/powerline-fonts.png" class=""><h3 id="Configure-fonts-for-iTerm2"><a href="#Configure-fonts-for-iTerm2" class="headerlink" title="Configure fonts for iTerm2"></a>Configure fonts for iTerm2</h3><p>Select the proper, pre-patched fonts marked as Powerline fonts. Make sure you set the fonts for non-ASCII as well.</p><img src="/2017/11/13/configure-zsh-on-macos/configure-fonts-for-iterm2.png" class=""><h3 id="Solarized-Dark-theme-in-iTerm2"><a href="#Solarized-Dark-theme-in-iTerm2" class="headerlink" title="Solarized Dark theme in iTerm2"></a>Solarized Dark theme in iTerm2</h3><p>This is how the Solarized Dark theme looks like in iTerm2 using above settings and the “agnoster” theme.</p><p>If you are on a newer MBP with a touch bar, you can change color themes within iTerm from the touch bar.</p><img src="/2017/11/13/configure-zsh-on-macos/solarized-dark-theme-in-iterm2.png" class=""><h2 id="Setting-oh-my-zsh-theme"><a href="#Setting-oh-my-zsh-theme" class="headerlink" title="Setting oh-my-zsh theme"></a>Setting oh-my-zsh theme</h2><p>I’ve chosen the Agnoster theme. It looks great but may be sluggish on large sets. The are many alternatives that look similar, so try them out. </p><p>The Powerlevel9 theme is a well known alternative, which is supposedly great for prompt customizations and speed optimized <a href="(https://github.com/bhilburn/powerlevel9k).">(https://github.com/bhilburn/powerlevel9k).</a></p><p>Select theme (built-in) by editing the ~/.zshrc file.</p><p>Custom theme, such as the powerlevel9k theme, needs to be custom installed.</p><img src="/2017/11/13/configure-zsh-on-macos/setting-oh-my-zsh-theme.png" class=""><h3 id="Intall-the-custom-Powerlevel9k-theme"><a href="#Intall-the-custom-Powerlevel9k-theme" class="headerlink" title="Intall the custom Powerlevel9k theme"></a>Intall the custom Powerlevel9k theme</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone [<span class="string">https://github.com/bhilburn/powerlevel9k.git</span>](<span class="link">https://github.com/bhilburn/powerlevel9k.git</span>) ~/.oh-my-zsh/custom/themes/powerlevel9k</span><br><span class="line"> </span><br></pre></td></tr></table></figure><p>Specify the theme in the ~/.zshrc file:</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">ZSH_THEME</span>=<span class="string">"powerlevel9k/powerlevel9k"</span></span><br><span class="line"> </span><br></pre></td></tr></table></figure><img src="/2017/11/13/configure-zsh-on-macos/intall-the-custom-powerlevel9k-theme.png" class=""><h3 id="Powerlevel9k-in-action"><a href="#Powerlevel9k-in-action" class="headerlink" title="Powerlevel9k in action"></a>Powerlevel9k in action</h3><img src="/2017/11/13/configure-zsh-on-macos/powerlevel9k-in-action.png" class="">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;What can I say, I’m such a sucker for eye candy I couldn’t resist installing the ZSH shell and the Agnoster theme.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https:
      
    
    </summary>
    
    
      <category term="zsh" scheme="https://blog.rylander.io/tags/zsh/"/>
    
  </entry>
  
  <entry>
    <title>Setup L2tp VPN on USG Using Radius Account</title>
    <link href="https://blog.rylander.io/2017/07/07/setup-l2tp-vpn-on-usg-using-radius-account/"/>
    <id>https://blog.rylander.io/2017/07/07/setup-l2tp-vpn-on-usg-using-radius-account/</id>
    <published>2017-07-07T07:49:58.000Z</published>
    <updated>2017-07-07T07:49:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>This is a writeup of the UBNT article for setting up client access to the VPN L2TP server on the USG using the new Radius capability: <a href="https://help.ubnt.com/hc/en-us/articles/115005445768" target="_blank" rel="noopener">https://help.ubnt.com/hc/en-us/articles/115005445768</a> </p><p>The new wizards automatically setup the neccessary firewall openings for L2TP. Allowed internal networks are set to 0.0.0.0/0 which allows a client to access any IP range within your LAN. Updating these to proper ranges require CLI, if you are not fine with that.</p><img src="/2017/07/07/setup-l2tp-vpn-on-usg-using-radius-account/3b396b31-4425-44f0-9ec4-3631f6bcdaaa.png" class=""><h2 id="Create-a-Radius-service"><a href="#Create-a-Radius-service" class="headerlink" title="Create a Radius service"></a>Create a Radius service</h2><p>First start and setup the built-in Radius service. If you run the controller in a container, you need to expose the ports to the host.</p><img src="/2017/07/07/setup-l2tp-vpn-on-usg-using-radius-account/create-a-radius-service.png" class=""><h2 id="Create-a-new-Radius-User"><a href="#Create-a-new-Radius-User" class="headerlink" title="Create a new Radius User"></a>Create a new Radius User</h2><p>Create your user of choice and give it a password. Tag it for the specific usage tunnel type.</p><img src="/2017/07/07/setup-l2tp-vpn-on-usg-using-radius-account/create-a-new-radius-user.png" class=""><h2 id="Create-L2TP-VPN-settings"><a href="#Create-L2TP-VPN-settings" class="headerlink" title="Create L2TP VPN settings"></a>Create L2TP VPN settings</h2><p>Choose a network range which is close to your LAN as some clients cannot route traffic to your local address range unless it falls wihtin /8. This step is important if you are using an iPhone or equivalent and not setting it up using the proper profile utility and instead is setting things up from the iPhone UI.</p><p>Here I’m using my local DNS service, since I want access to my internal LAN services.</p><img src="/2017/07/07/setup-l2tp-vpn-on-usg-using-radius-account/create-l2tp-vpn-settings.png" class="">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;This is a writeup of the UBNT article for setting up client access to the VPN L2TP server on the USG using the new Radius capability: &lt;a 
      
    
    </summary>
    
    
      <category term="ubnt" scheme="https://blog.rylander.io/tags/ubnt/"/>
    
      <category term="unifi" scheme="https://blog.rylander.io/tags/unifi/"/>
    
      <category term="vpn" scheme="https://blog.rylander.io/tags/vpn/"/>
    
  </entry>
  
  <entry>
    <title>Resize Photon Root Disk</title>
    <link href="https://blog.rylander.io/2017/07/04/resize-photon-root-disk/"/>
    <id>https://blog.rylander.io/2017/07/04/resize-photon-root-disk/</id>
    <published>2017-07-04T08:18:07.000Z</published>
    <updated>2017-07-04T08:18:07.000Z</updated>
    
    <content type="html"><![CDATA[<p>I use the Photon minimal distribution quite extensively. It does come with a tiny disk size of 8GB. This is a writeup of the detailed instructions of this original post: <a href="https://communities.vmware.com/thread/521416" target="_blank" rel="noopener">https://communities.vmware.com/thread/521416.</a> </p><img src="/2017/07/04/resize-photon-root-disk/fbb1802c-1e78-46a4-ba1c-ddd03a58c368.png" class=""><h2 id="Install-gpart"><a href="#Install-gpart" class="headerlink" title="Install gpart"></a>Install gpart</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tdnf install gptfdisk -y</span><br></pre></td></tr></table></figure><img src="/2017/07/04/resize-photon-root-disk/install-gpart.png" class=""><h2 id="Run-it-on-the-disk"><a href="#Run-it-on-the-disk" class="headerlink" title="Run it on the disk"></a>Run it on the disk</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gdisk /dev/sda</span><br></pre></td></tr></table></figure><img src="/2017/07/04/resize-photon-root-disk/run-it-on-the-disk.png" class=""><h2 id="List-the-root-partition’s-info-and-copy-the-unique-GUID"><a href="#List-the-root-partition’s-info-and-copy-the-unique-GUID" class="headerlink" title="List the root partition’s info and copy the unique GUID"></a>List the root partition’s info and copy the unique GUID</h2><p>List the root partition’s info:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Command (? for help): i</span><br></pre></td></tr></table></figure><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Partition number (1-2): 2</span><br></pre></td></tr></table></figure><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Partition number (1-2): 2</span><br><span class="line">Partition GUID code: 0FC63DAF-8483-4772-8E79-3D69D8477DE4 (Linux filesystem)</span><br><span class="line">Partition unique GUID: DB3788E4-5613-4E7A-820B-15E269340E29</span><br><span class="line">First sector: 6144 (at 3.0 MiB)</span><br><span class="line">Last sector: 16777182 (at 8.0 GiB)</span><br><span class="line">Partition size: 16771039 sectors (8.0 GiB)</span><br><span class="line">Attribute flags: 0000000000000000</span><br><span class="line">Partition name: ''</span><br></pre></td></tr></table></figure><img src="/2017/07/04/resize-photon-root-disk/list-the-root-partition-s-info-and-copy-the-unique-guid.png" class=""><h2 id="Now-delete-the-root-partition"><a href="#Now-delete-the-root-partition" class="headerlink" title="Now delete the root partition"></a>Now delete the root partition</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Command (? for help): d</span><br><span class="line">Partition number (1-2): 2</span><br></pre></td></tr></table></figure><img src="/2017/07/04/resize-photon-root-disk/now-delete-the-root-partition.png" class=""><h2 id="Now-make-a-new-partition-with-the-default-parameters-It-should-fill-all-available-space-with-the-defaults"><a href="#Now-make-a-new-partition-with-the-default-parameters-It-should-fill-all-available-space-with-the-defaults" class="headerlink" title="Now make a new partition with the default parameters.  It should fill all available space with the defaults"></a>Now make a new partition with the default parameters.  It should fill all available space with the defaults</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Command (? for help): n</span><br><span class="line">Partition number (2-128, default 2): 2</span><br><span class="line">First sector (34-52428766, default = 6144) or &#123;+-&#125;size&#123;KMGTP&#125;:</span><br><span class="line">Last sector (6144-52428766, default = 52428766) or &#123;+-&#125;size&#123;KMGTP&#125;:</span><br><span class="line">Current type is 'Linux filesystem'</span><br><span class="line">Hex code or GUID (L to show codes, Enter = 8300):</span><br><span class="line">Changed type of partition to 'Linux filesystem'</span><br></pre></td></tr></table></figure><img src="/2017/07/04/resize-photon-root-disk/now-make-a-new-partition-with-the-default-parameters-nbsp--it-should-fill-all-available-space-with-t.png" class=""><h2 id="Enter-the-partition’s-new-unique-GUID"><a href="#Enter-the-partition’s-new-unique-GUID" class="headerlink" title="Enter the partition’s new unique GUID"></a>Enter the partition’s new unique GUID</h2><p>Copy the GUID from before to the new partition you just created</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x&lt;enter&gt;c&lt;enter&gt;2&lt;enter&gt;DB3788E4-5613-4E7A-820B-15E269340E29&lt;enter&gt;</span><br></pre></td></tr></table></figure><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">w&lt;enter&gt;y&lt;enter&gt;</span><br></pre></td></tr></table></figure><img src="/2017/07/04/resize-photon-root-disk/enter-the-partition-s-new-unique-guid.png" class=""><h2 id="Resize-filesystem"><a href="#Resize-filesystem" class="headerlink" title="Resize filesystem"></a>Resize filesystem</h2><p>Reread the partition table and resize the partition:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">partx -u /dev/sda</span><br><span class="line"> </span><br><span class="line">resize2fs /dev/sda2</span><br></pre></td></tr></table></figure><p>Check your new partition size:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df -h</span><br></pre></td></tr></table></figure><img src="/2017/07/04/resize-photon-root-disk/resize-filesystem.png" class="">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;I use the Photon minimal distribution quite extensively. It does come with a tiny disk size of 8GB. This is a writeup of the detailed ins
      
    
    </summary>
    
    
      <category term="vmware" scheme="https://blog.rylander.io/tags/vmware/"/>
    
      <category term="photon" scheme="https://blog.rylander.io/tags/photon/"/>
    
  </entry>
  
  <entry>
    <title>How to Migrate From an Existing UBNT EdgeRouter to a USG</title>
    <link href="https://blog.rylander.io/2017/06/29/how-to-migrate-from-an-existing-ubnt-edgerouter-to-a-usg/"/>
    <id>https://blog.rylander.io/2017/06/29/how-to-migrate-from-an-existing-ubnt-edgerouter-to-a-usg/</id>
    <published>2017-06-29T19:12:47.000Z</published>
    <updated>2017-06-29T19:12:47.000Z</updated>
    
    <content type="html"><![CDATA[<p>So you’ve been secretly oogling the shiny USG device and the been frustrated with the Controller software and blank graphics like me? I can verify that the migration process is quite straight forward, with some manual lifting involved.</p><p>The process is like this:</p><ol><li>Dump you existing ERL configuration to a textfile, save it on your computer and never touch the ERL again.</li><li>Hook up your new USG to your computer via the LAN port. </li><li>Move your new configuration over to the new device, such as external WAN ip settings and local LAN settings, including DHCP static leases etc. You need to also delete any existing conflicting settings, or the new/changed settings won’t take.</li><li>commit, save, and reboot</li><li>specify the unifi controller adoption url if neccessary and discover and adopt the new device via the controller software</li></ol><img src="/2017/06/29/how-to-migrate-from-an-existing-ubnt-edgerouter-to-a-usg/89b8de5c-2eed-4682-bfce-5fd8fab45e14.jpg" class=""><h2 id="Dump-existing-ERL-configuration-to-a-text-file"><a href="#Dump-existing-ERL-configuration-to-a-text-file" class="headerlink" title="Dump existing ERL configuration to a text file"></a>Dump existing ERL configuration to a text file</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin@erl:~$ show configuration commands &gt; config.txt</span><br></pre></td></tr></table></figure><img src="/2017/06/29/how-to-migrate-from-an-existing-ubnt-edgerouter-to-a-usg/dump-existing-erl-configuration-to-a-text-file.png" class=""><p>The commands are ready to be copy &amp; pasted into your new device. As the device is preconfigured with some conflicting settings, it is not possible to run this as a script, as you must delete existing settings before committing.</p><img src="/2017/06/29/how-to-migrate-from-an-existing-ubnt-edgerouter-to-a-usg/93bdf8b7-dc62-4e10-9be1-2d35be01049a.png" class=""><h2 id="Connect-new-device-to-local-computer"><a href="#Connect-new-device-to-local-computer" class="headerlink" title="Connect new device to local computer"></a>Connect new device to local computer</h2><p>Attach your local computer to the LAN port on the USG. The USG will serve out DHCP address in the 192.168.1.1/24 range and the router default adress is 192.168.1.1.</p><img src="/2017/06/29/how-to-migrate-from-an-existing-ubnt-edgerouter-to-a-usg/connect-new-device-to-local-computer.png" class=""><h2 id="Login"><a href="#Login" class="headerlink" title="Login"></a>Login</h2><p>Login using default settings ubnt/ubnt</p><img src="/2017/06/29/how-to-migrate-from-an-existing-ubnt-edgerouter-to-a-usg/login.png" class=""><h2 id="Script-settings"><a href="#Script-settings" class="headerlink" title="Script settings"></a>Script settings</h2><p>You could script settings (which I tried at first) but since existing configuration clashes with the new updated ones, you would first need to prep the script with delete commands. This would be usable if I had many devices but since I only have one, its easier to copy paste relevant lines directly.</p><img src="/2017/06/29/how-to-migrate-from-an-existing-ubnt-edgerouter-to-a-usg/script-settings.png" class=""><img src="/2017/06/29/how-to-migrate-from-an-existing-ubnt-edgerouter-to-a-usg/80aa6023-6167-4441-b688-6f1769cbf20d.png" class=""><p>chmod +x erl_config.sh</p><img src="/2017/06/29/how-to-migrate-from-an-existing-ubnt-edgerouter-to-a-usg/4f550f90-64c0-48fe-8a8b-66cc55d3c5fe.png" class=""><p>When you execute, the script will fail to commit due to conflicting changes.</p><img src="/2017/06/29/how-to-migrate-from-an-existing-ubnt-edgerouter-to-a-usg/43937bd5-a6a2-4ae3-b2f0-3e1d5ebf2ccf.png" class=""><p>Some settings will take though</p><img src="/2017/06/29/how-to-migrate-from-an-existing-ubnt-edgerouter-to-a-usg/28f16f7d-7d9f-465c-904c-7579fca503b4.png" class=""><h2 id="Set-static-LAN-ip-address"><a href="#Set-static-LAN-ip-address" class="headerlink" title="Set static LAN ip address"></a>Set static LAN ip address</h2><p>The LAN port is given a static ip.</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">configure</span><br><span class="line">edit interfaces ethernet eth1</span><br><span class="line">set address 10.0.1.1/24</span><br><span class="line">delete address 192.168.1.1/24</span><br><span class="line">commit</span><br></pre></td></tr></table></figure><p>You will loose connectivity at this point. Do not reboot the device as the settings will not survive until you save.</p><p>Update your local computer IP settings to match your new LAN network.</p><img src="/2017/06/29/how-to-migrate-from-an-existing-ubnt-edgerouter-to-a-usg/set-static-lan-ip-address.png" class=""><h3 id="Update-known-hosts"><a href="#Update-known-hosts" class="headerlink" title="Update known_hosts"></a>Update known_hosts</h3><p>If you like me replace an existing device, chances are you need to update the SSH configuration.</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano ~/.ssh/known_hosts</span><br></pre></td></tr></table></figure><img src="/2017/06/29/how-to-migrate-from-an-existing-ubnt-edgerouter-to-a-usg/update-known_hosts.png" class=""><h2 id="Set-WAN-configuration"><a href="#Set-WAN-configuration" class="headerlink" title="Set WAN configuration"></a>Set WAN configuration</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">configure</span><br><span class="line">show interfaces</span><br><span class="line">set interfaces ethernet eth0 address *you wan ip/size*</span><br></pre></td></tr></table></figure><img src="/2017/06/29/how-to-migrate-from-an-existing-ubnt-edgerouter-to-a-usg/set-wan-configuration.png" class=""><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show interfaces ethernet eth0</span><br></pre></td></tr></table></figure><img src="/2017/06/29/how-to-migrate-from-an-existing-ubnt-edgerouter-to-a-usg/6fd11612-4251-4920-8426-f931817f83b4.png" class=""><p>show service dhcp-server</p><p>delete service dhcp-server</p><img src="/2017/06/29/how-to-migrate-from-an-existing-ubnt-edgerouter-to-a-usg/5b825ab9-6d73-4244-8dff-bf0a450547cb.png" class=""><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">set service dhcp-server shared-network-name LAN1 authoritative disable</span><br><span class="line">set service dhcp-server shared-network-name LAN1 subnet 10.0.1.0/24 default-router 10.0.1.1</span><br><span class="line">set service dhcp-server shared-network-name LAN1 subnet 10.0.1.0/24 dns-server 10.0.1.9</span><br><span class="line">set service dhcp-server shared-network-name LAN1 subnet 10.0.1.0/24 dns-server 10.0.1.6</span><br><span class="line">set service dhcp-server shared-network-name LAN1 subnet 10.0.1.0/24 domain-name rylander.io</span><br><span class="line">set service dhcp-server shared-network-name LAN1 subnet 10.0.1.0/24 lease 86400</span><br><span class="line">set service dhcp-server shared-network-name LAN1 subnet 10.0.1.0/24 start 10.0.1.100 stop 10.0.1.199</span><br><span class="line">set service dhcp-server shared-network-name LAN1 subnet 10.0.1.0/24 static-mapping Familjens-iPad ip-address 10.0.1.151</span><br><span class="line">set service dhcp-server shared-network-name LAN1 subnet 10.0.1.0/24 static-mapping Familjens-iPad mac-address '2c:1f:23:23:d7:e6'</span><br><span class="line">set service dhcp-server shared-network-name LAN1 subnet 10.0.1.0/24 static-mapping FamiljensiPad2 ip-address 10.0.1.170</span><br><span class="line">set service dhcp-server shared-network-name LAN1 subnet 10.0.1.0/24 static-mapping FamiljensiPad2 mac-address '74:e1:b6:b7:69:85'</span><br><span class="line">set service dhcp-server shared-network-name LAN1 subnet 10.0.1.0/24 static-mapping FamiljensiPhone ip-address 10.0.1.176</span><br><span class="line">set service dhcp-server shared-network-name LAN1 subnet 10.0.1.0/24 static-mapping FamiljensiPhone mac-address 'c0:9f:42:a4:68:e8'</span><br><span class="line">...</span><br><span class="line">set service dhcp-server shared-network-name LAN1 subnet 10.0.1.0/24 static-mapping VeraLite ip-address 10.0.1.104</span><br><span class="line">set service dhcp-server shared-network-name LAN1 subnet 10.0.1.0/24 static-mapping VeraLite mac-address '00:0e:8f:df:f2:79'</span><br><span class="line">set service dhcp-server shared-network-name LAN1 subnet 10.0.1.0/24 static-mapping XboxOne ip-address 10.0.1.116</span><br><span class="line">set service dhcp-server shared-network-name LAN1 subnet 10.0.1.0/24 static-mapping XboxOne mac-address 'c0:33:5e:d8:e1:79'</span><br><span class="line">set service dhcp-server shared-network-name LAN1 subnet 10.0.1.0/24 static-mapping kidsPad ip-address 10.0.1.122</span><br><span class="line">set service dhcp-server shared-network-name LAN1 subnet 10.0.1.0/24 static-mapping kidsPad mac-address 'a8:88:08:be:9c:d5'</span><br><span class="line">set service dhcp-server shared-network-name LAN1 subnet 10.0.1.0/24 static-mapping photon-nginx-proxy ip-address 10.0.1.32</span><br><span class="line">set service dhcp-server shared-network-name LAN1 subnet 10.0.1.0/24 static-mapping photon-nginx-proxy mac-address '00:50:56:94:21:8b'</span><br><span class="line">set service dhcp-server shared-network-name LAN1 subnet 10.0.1.0/24 static-mapping tinboy ip-address 10.0.1.124</span><br><span class="line">set service dhcp-server shared-network-name LAN1 subnet 10.0.1.0/24 static-mapping tinboy mac-address 'c8:2a:14:2d:f3:dd'</span><br><span class="line">set service dhcp-server shared-network-name LAN1 subnet 10.0.1.0/24 unifi-controller 10.0.1.21</span><br></pre></td></tr></table></figure><h2 id="Adopt-the-USG-to-the-controller"><a href="#Adopt-the-USG-to-the-controller" class="headerlink" title="Adopt the USG to the controller"></a>Adopt the USG to the controller</h2><p>Since my internal DNS isn’t used by the router, I need to map a hostname to an ip. The default mapping can be removed.</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">edit system static-host-mapping</span><br></pre></td></tr></table></figure><img src="/2017/06/29/how-to-migrate-from-an-existing-ubnt-edgerouter-to-a-usg/adopt-the-usg-to-the-controller.png" class=""><h3 id="Set-local-host-mapping"><a href="#Set-local-host-mapping" class="headerlink" title="Set local host mapping"></a>Set local host mapping</h3><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set host-name unifi.rylander.io inet 10.0.1.21</span><br></pre></td></tr></table></figure><img src="/2017/06/29/how-to-migrate-from-an-existing-ubnt-edgerouter-to-a-usg/set-local-host-mapping.png" class=""><h3 id="Verify-connection-to-controller-and-initiate-adoption"><a href="#Verify-connection-to-controller-and-initiate-adoption" class="headerlink" title="Verify connection to controller and initiate adoption"></a>Verify connection to controller and initiate adoption</h3><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ping unifi.rylander.io</span><br></pre></td></tr></table></figure><p>If the controller can’t find the USG device you can inform the controller by setting the inform url.</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unifi set-inform [http://unifi.rylander.io:18080/inform](http://unifi.rylander.io:18080/inform)</span><br></pre></td></tr></table></figure><p>As I had forgot to port forward the adoption port from my dockerized controller, this step was a bit frustrating at first. Note the screenshot is misleading as a result. I ended up forwarding the dockerized controller port 8080 to the Synology host port 18080 (and remembering why I didn’t forward port 8080 directly).</p><img src="/2017/06/29/how-to-migrate-from-an-existing-ubnt-edgerouter-to-a-usg/verify-connection-to-controller-and-initiate-adoption.png" class=""><h3 id="Check-status"><a href="#Check-status" class="headerlink" title="Check status"></a>Check status</h3><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">unifi info</span><br></pre></td></tr></table></figure><img src="/2017/06/29/how-to-migrate-from-an-existing-ubnt-edgerouter-to-a-usg/check-status.png" class=""><h3 id="Pending-adoption"><a href="#Pending-adoption" class="headerlink" title="Pending adoption"></a>Pending adoption</h3><p>Remember to actually click the “Adopt” link in the controller UI.</p><p>Then you also need to go back to the SSH session and reissue the command to make it stick.</p><img src="/2017/06/29/how-to-migrate-from-an-existing-ubnt-edgerouter-to-a-usg/pending-adoption.png" class=""><h3 id="Adopting"><a href="#Adopting" class="headerlink" title="Adopting"></a>Adopting</h3><img src="/2017/06/29/how-to-migrate-from-an-existing-ubnt-edgerouter-to-a-usg/adopting.png" class=""><h3 id="Provisioning"><a href="#Provisioning" class="headerlink" title="Provisioning"></a>Provisioning</h3><img src="/2017/06/29/how-to-migrate-from-an-existing-ubnt-edgerouter-to-a-usg/provisioning.png" class=""><h3 id="Verify-settings"><a href="#Verify-settings" class="headerlink" title="Verify settings"></a>Verify settings</h3><p>The controller will preserve existing settings</p><img src="/2017/06/29/how-to-migrate-from-an-existing-ubnt-edgerouter-to-a-usg/verify-settings.png" class="">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;So you’ve been secretly oogling the shiny USG device and the been frustrated with the Controller software and blank graphics like me? I c
      
    
    </summary>
    
    
      <category term="ubnt" scheme="https://blog.rylander.io/tags/ubnt/"/>
    
      <category term="unifi" scheme="https://blog.rylander.io/tags/unifi/"/>
    
  </entry>
  
  <entry>
    <title>Setup Static Website Hosting on Amazon S3 Bucket</title>
    <link href="https://blog.rylander.io/2017/06/16/setup-static-website-hosting-on-amazon-s3-bucket/"/>
    <id>https://blog.rylander.io/2017/06/16/setup-static-website-hosting-on-amazon-s3-bucket/</id>
    <published>2017-06-16T08:41:42.000Z</published>
    <updated>2017-06-16T08:41:42.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Create-an-S3-bucket"><a href="#Create-an-S3-bucket" class="headerlink" title="Create an S3 bucket"></a>Create an S3 bucket</h2><p><a href="https://console.aws.amazon.com/s3/home?region=eu-central-1" target="_blank" rel="noopener">https://console.aws.amazon.com/s3/home?region=eu-central-1</a></p><img src="/2017/06/16/setup-static-website-hosting-on-amazon-s3-bucket/create-an-s3-bucket.png" class=""><h3 id="Naming"><a href="#Naming" class="headerlink" title="Naming"></a>Naming</h3><p>Naming is very important. Partly because it will form the direct public url but also if you use some external CDN or reverse proxy. The AWS routing needs the bucket name to reflect the custom DNS in that case and the bucket name is used in numerous places.</p><img src="/2017/06/16/setup-static-website-hosting-on-amazon-s3-bucket/naming.png" class=""><h3 id="Enable-versioning"><a href="#Enable-versioning" class="headerlink" title="Enable versioning"></a>Enable versioning</h3><img src="/2017/06/16/setup-static-website-hosting-on-amazon-s3-bucket/enable-versioning.png" class=""><h3 id="Enable-logging"><a href="#Enable-logging" class="headerlink" title="Enable logging"></a>Enable logging</h3><img src="/2017/06/16/setup-static-website-hosting-on-amazon-s3-bucket/enable-logging.png" class=""><h3 id="Permissions"><a href="#Permissions" class="headerlink" title="Permissions"></a>Permissions</h3><img src="/2017/06/16/setup-static-website-hosting-on-amazon-s3-bucket/permissions.png" class=""><h3 id="Review-and-create"><a href="#Review-and-create" class="headerlink" title="Review and create"></a>Review and create</h3><img src="/2017/06/16/setup-static-website-hosting-on-amazon-s3-bucket/review-and-create.png" class=""><h3 id="Endpoint"><a href="#Endpoint" class="headerlink" title="Endpoint"></a>Endpoint</h3><p>Note the endpoint address as this is used for direct access but also if you put a CDN or reverse proxy in front of you website. The AWS routing requires the bucket name is equal to your custom DNS name (in my case blog.rylander.io).</p><img src="/2017/06/16/setup-static-website-hosting-on-amazon-s3-bucket/endpoint.png" class=""><h2 id="Enable-static-website-hosting"><a href="#Enable-static-website-hosting" class="headerlink" title="Enable static website hosting"></a>Enable static website hosting</h2><img src="/2017/06/16/setup-static-website-hosting-on-amazon-s3-bucket/enable-static-website-hosting.png" class=""><h3 id="Specify-Bucket-Policy"><a href="#Specify-Bucket-Policy" class="headerlink" title="Specify Bucket Policy"></a>Specify Bucket Policy</h3><p>In order to serve folder content correctly, you must add a bucket policy to handle defaults for folder urls. Otherwise AWS S3 will just serve an XML listing.</p><img src="/2017/06/16/setup-static-website-hosting-on-amazon-s3-bucket/specify-bucket-policy.png" class=""><h2 id="Create-and-Add-an-IAM-user-for-deployment"><a href="#Create-and-Add-an-IAM-user-for-deployment" class="headerlink" title="Create and Add an IAM user for deployment"></a>Create and Add an IAM user for deployment</h2><p>Once an empty bucket is created, we’ll also need an IAM user with appropriate permissions to upload the blog pieces. Creating an IAM user is simple; be sure to create an access key when you do (or go back into the IAM display, hit the <strong>Security Credentials</strong> tab, and click <strong>Create access key</strong>). </p><p>The Access Key and the Secret Key will be stored on your local computer in a configuration file for the AWS SDK for javascript as detailed later. </p><img src="/2017/06/16/setup-static-website-hosting-on-amazon-s3-bucket/create-and-add-an-iam-user-for-deployment.png" class=""><img src="/2017/06/16/setup-static-website-hosting-on-amazon-s3-bucket/d8c8dc4f-b2d7-47d4-936e-5117b345edbd.png" class=""><h2 id="Create-new-IAM-Policy"><a href="#Create-new-IAM-Policy" class="headerlink" title="Create new IAM Policy"></a>Create new IAM Policy</h2><img src="/2017/06/16/setup-static-website-hosting-on-amazon-s3-bucket/create-new-iam-policy.png" class=""><img src="/2017/06/16/setup-static-website-hosting-on-amazon-s3-bucket/2d4c2515-4c08-41d1-9c2c-ddf09a0e523a.png" class=""><p>{<br>    “Version”: “2012-10-17”,<br>    “Statement”: [<br>        {<br>            “Sid”: “S3BlogDeploy”,<br>            “Effect”: “Allow”,<br>            “Action”: [<br>                “s3:*”<br>            ],<br>            “Resource”: [<br>                “arn:aws:s3:::blog.rylander.io/*”,<br>                “arn:aws:s3:::blog.rylander.io”<br>            ]<br>        }<br>    ]<br>}</p><p>The Sid field is an arbitrary string (no whitespaces) to name the policy. The Resource field lists all things this policy can act upon; it’s important to list both the contents of the bucket (arn:aws:s3:::example.com/*) as well as the top-level of the bucket itself (arn:aws:s3:::example.com). Without both, hexo deploy won’t be able to function.</p><img src="/2017/06/16/setup-static-website-hosting-on-amazon-s3-bucket/5c4a0df1-fbc0-44c3-807f-62fcfe21097a.png" class=""><img src="/2017/06/16/setup-static-website-hosting-on-amazon-s3-bucket/ac22d532-9063-402f-ae17-1f7bf274cb61.png" class=""><h2 id="Attach-Policy-to-IAM-User-Account"><a href="#Attach-Policy-to-IAM-User-Account" class="headerlink" title="Attach Policy to IAM User Account"></a>Attach Policy to IAM User Account</h2><p>Once the policy is made, select it (from <strong>IAM</strong>‘s <strong>Policies</strong> sidebar) and click the <strong>Attached Entities</strong> tab. Hit <strong>Attach</strong>, then pick your user from the list of IAM users. </p><img src="/2017/06/16/setup-static-website-hosting-on-amazon-s3-bucket/attach-policy-to-iam-user-account.png" class=""><img src="/2017/06/16/setup-static-website-hosting-on-amazon-s3-bucket/e5136f64-4cce-4d99-93fb-1d318b831afa.png" class=""><img src="/2017/06/16/setup-static-website-hosting-on-amazon-s3-bucket/d5bb65e3-71dd-46e8-9129-f4752646ebdd.png" class=""><h2 id="Verify-access-to-S3-bucket"><a href="#Verify-access-to-S3-bucket" class="headerlink" title="Verify access to S3 bucket"></a>Verify access to S3 bucket</h2><p><a href="http://blog.rylander.io.s3-website.eu-central-1.amazonaws.com" target="_blank" rel="noopener">http://blog.rylander.io.s3-website.eu-central-1.amazonaws.com</a> </p><p>Make sure to verify the serving of folders as well, which depends on the bucket configuration made earlier.</p><img src="/2017/06/16/setup-static-website-hosting-on-amazon-s3-bucket/verify-access-to-s3-bucket.png" class=""><h3 id="Reconfigure-Cloudflare-DNS"><a href="#Reconfigure-Cloudflare-DNS" class="headerlink" title="Reconfigure Cloudflare DNS"></a>Reconfigure Cloudflare DNS</h3><p><a href="https://support.cloudflare.com/hc/en-us/articles/200168926-How-do-I-use-Cloudflare-with-Amazon-s-S3-Service-" target="_blank" rel="noopener">https://support.cloudflare.com/hc/en-us/articles/200168926-How-do-I-use-Cloudflare-with-Amazon-s-S3-Service-</a> </p><p>When hosting on DigitalOcean, I had CloudFlare point to an actual IP but for AWS S3 I need to switch to CNAME. The CNAME must reflect the bucket name, as per AWS guidelines as the routing in AWS relies on the hostname. The Endpoint to use is displayed in the Management Console for the “Static website hosting” panel in the Bucket configuration.</p><p><a href="https://blog.rylander.io">https://blog.rylander.io</a> (the http-https redirection is configured using CloudFlare in my case).</p><img src="/2017/06/16/setup-static-website-hosting-on-amazon-s3-bucket/reconfigure-cloudflare-dns.png" class=""><h2 id="Hexo-deployment-config"><a href="#Hexo-deployment-config" class="headerlink" title="Hexo deployment config"></a>Hexo deployment config</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-aws-s3 --save</span><br></pre></td></tr></table></figure><p>Specify the plugin, bucket and region in site _config.yml.</p><p>Note the credentials are not stored inside the config file.</p><img src="/2017/06/16/setup-static-website-hosting-on-amazon-s3-bucket/hexo-deployment-config.png" class=""><h3 id="Install-the-AWS-javascript-SDK-for-node"><a href="#Install-the-AWS-javascript-SDK-for-node" class="headerlink" title="Install the AWS javascript SDK for node"></a>Install the AWS javascript SDK for node</h3><p><a href="http://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/getting-started-nodejs.html" target="_blank" rel="noopener">http://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/getting-started-nodejs.html</a></p><p><a href="http://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/installing-jssdk.html" target="_blank" rel="noopener">http://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/installing-jssdk.html</a></p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install aws-sdk --save</span><br></pre></td></tr></table></figure><h3 id="Edit-the-configuration-for-the-AWS-SDK"><a href="#Edit-the-configuration-for-the-AWS-SDK" class="headerlink" title="Edit the configuration for the AWS SDK"></a>Edit the configuration for the AWS SDK</h3><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano ~/.aws/credentials</span><br></pre></td></tr></table></figure><img src="/2017/06/16/setup-static-website-hosting-on-amazon-s3-bucket/edit-the-configuration-for-the-aws-sdk.png" class=""><h3 id="Deploy-to-AWS-S3"><a href="#Deploy-to-AWS-S3" class="headerlink" title="Deploy to AWS S3"></a>Deploy to AWS S3</h3><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><img src="/2017/06/16/setup-static-website-hosting-on-amazon-s3-bucket/deploy-to-aws-s3.png" class="">]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Create-an-S3-bucket&quot;&gt;&lt;a href=&quot;#Create-an-S3-bucket&quot; class=&quot;headerlink&quot; title=&quot;Create an S3 bucket&quot;&gt;&lt;/a&gt;Create an S3 bucket&lt;/h2&gt;&lt;p&gt;&lt;a
      
    
    </summary>
    
    
      <category term="hexo" scheme="https://blog.rylander.io/tags/hexo/"/>
    
      <category term="aws" scheme="https://blog.rylander.io/tags/aws/"/>
    
      <category term="s3" scheme="https://blog.rylander.io/tags/s3/"/>
    
  </entry>
  
  <entry>
    <title>Run Pi-Hole in a Docker Container</title>
    <link href="https://blog.rylander.io/2017/06/15/run-pi-hole-in-a-docker-container/"/>
    <id>https://blog.rylander.io/2017/06/15/run-pi-hole-in-a-docker-container/</id>
    <published>2017-06-15T18:55:14.000Z</published>
    <updated>2017-06-15T18:55:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>I’m probably one of the last to setup a pi-hole and still not convinced it’s such a good idea. Will evaluate for a few weeks and then decide on what to do.</p><p>The pi-hole is setup as the primary DNS service for all DHCP connected devices. It will forward to my internal DNS (Windows AD) infrastructure which in turn forwards to the router (UBNT EdgeRouter). The Firewall forwards to OpenDNS. For the rylander.io domain, my internal DNS has a split personality and serveral sub domains are delegated to Cloudflare DNS which also duplicates some hostnames due to LetsEncrypt validation.</p><img src="/2017/06/15/run-pi-hole-in-a-docker-container/8cb2fb75-aec2-46c4-ac50-a01666a58eec.png" class=""><h2 id="Dock-distribution"><a href="#Dock-distribution" class="headerlink" title="Dock distribution"></a>Dock distribution</h2><p>I’m using the execellent distribution of <a href="https://github.com/diginc/docker-pi-hole" target="_blank" rel="noopener">https://github.com/diginc/docker-pi-hole</a> which contains complete documentation. I’m using a minimal Photon VM and using the Alpine x86 release.</p><p>I did craft the docker-compose.yml myself, but only because I didn’t read carefully to see there is already one existing.</p><img src="/2017/06/15/run-pi-hole-in-a-docker-container/dock-distribution.png" class=""><h2 id="docker-compose"><a href="#docker-compose" class="headerlink" title="docker-compose"></a>docker-compose</h2><p>It’s recommended to keep the data and confguration on the host in order to easily upgrade the container when new realases come out. It’s as simple as destroying the running container (docker-compose down) and then do a docker pull diginc/pi-hole:alpine followed by a docker-compose up -d.</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">version: '2'</span><br><span class="line">services:</span><br><span class="line">  pihole:</span><br><span class="line">    container_name: pihole</span><br><span class="line">    restart: unless-stopped</span><br><span class="line">    image: diginc/pi-hole:alpine</span><br><span class="line">    environment:</span><br><span class="line">    - ServerIP=10.0.1.9</span><br><span class="line">    - TZ=Europe/Stockholm</span><br><span class="line">    - WEBPASSWORD=*redacted*</span><br><span class="line">    - DNS1=10.0.1.6</span><br><span class="line">    - DNS2=10.0.1.22</span><br><span class="line">    - VIRTUAL_HOST=pihole.rylander.io</span><br><span class="line">    volumes:</span><br><span class="line">    - /root/pihole/:/etc/pihole/</span><br><span class="line">    - /root/pihole/dnsmasq.d/:/etc/dnsmasq.d/</span><br><span class="line">    ports:</span><br><span class="line">    - "80:80"</span><br><span class="line">    - "53:53/tcp"</span><br><span class="line">    - "53:53/udp"</span><br></pre></td></tr></table></figure><p>I’ve registered pihole.rylander.io in my internal DNS (Windows AD). As I run this on a minimal host, it’s easy to expose non-conflicting ports.</p><p>The docker-compose file is placed in the /root/pihole folder.</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker-compose up</span><br></pre></td></tr></table></figure><p>just to verify it starts without errors, then restart as daemon.</p><img src="/2017/06/15/run-pi-hole-in-a-docker-container/f1dc70b1-426a-4661-9443-e126e62d79b2.png" class=""><h2 id="Update-list-of-ad-serving-domains"><a href="#Update-list-of-ad-serving-domains" class="headerlink" title="Update list of ad-serving domains"></a>Update list of ad-serving domains</h2><p>It’s a good idea to update the list so it’s current.</p><img src="/2017/06/15/run-pi-hole-in-a-docker-container/update-list-of-ad-serving-domains.png" class=""><h2 id="Tailing-the-log"><a href="#Tailing-the-log" class="headerlink" title="Tailing the log"></a>Tailing the log</h2><p>In order to verify, you can also tail the log for DNS requests.</p><img src="/2017/06/15/run-pi-hole-in-a-docker-container/tailing-the-log.png" class="">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;I’m probably one of the last to setup a pi-hole and still not convinced it’s such a good idea. Will evaluate for a few weeks and then dec
      
    
    </summary>
    
    
      <category term="docker" scheme="https://blog.rylander.io/tags/docker/"/>
    
      <category term="dns" scheme="https://blog.rylander.io/tags/dns/"/>
    
  </entry>
  
  <entry>
    <title>Force Removal of Folders on VSAN</title>
    <link href="https://blog.rylander.io/2017/06/13/force-removal-of-folders-on-vsan/"/>
    <id>https://blog.rylander.io/2017/06/13/force-removal-of-folders-on-vsan/</id>
    <published>2017-06-13T06:08:22.000Z</published>
    <updated>2017-06-13T06:08:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>When folder deletion fails in the UI, you can fall back to the CLI and force deletion.</p><p>SSH into your ESXi instance and use the osfs-rmdir utility.</p><p>This type of error can also occur due to connectivity issues as per this thread: <a href="https://communities.vmware.com/thread/489842" target="_blank" rel="noopener">https://communities.vmware.com/thread/489842.</a></p><img src="/2017/06/13/force-removal-of-folders-on-vsan/6caefd94-4a0f-45a5-b299-01e32b7121f9.png" class=""><h2 id="List-directory"><a href="#List-directory" class="headerlink" title="List directory"></a>List directory</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@humle:/vmfs/volumes/vsan:5218ef34de66cc64-1d0ef14adba2e0e5] ls -la</span><br><span class="line">ls: ./648f3f59-5df4-e11f-00d0-a02bb83182fc: No such device or address</span><br><span class="line">ls: ./fd8f3f59-ade1-802d-c5a3-a02bb83182fc: No such device or address</span><br></pre></td></tr></table></figure><img src="/2017/06/13/force-removal-of-folders-on-vsan/list-directory.png" class=""><h2 id="Force-delete-cli"><a href="#Force-delete-cli" class="headerlink" title="Force delete (cli)"></a>Force delete (cli)</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/lib/vmware/osfs/bin/osfs-rmdir 648f3f59-5df4-e11f-00d0-a02bb83182fc -f</span><br></pre></td></tr></table></figure><img src="/2017/06/13/force-removal-of-folders-on-vsan/force-delete--cli-.png" class="">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;When folder deletion fails in the UI, you can fall back to the CLI and force deletion.&lt;/p&gt;
&lt;p&gt;SSH into your ESXi instance and use the osf
      
    
    </summary>
    
    
      <category term="vmware" scheme="https://blog.rylander.io/tags/vmware/"/>
    
      <category term="esxi" scheme="https://blog.rylander.io/tags/esxi/"/>
    
      <category term="vsan" scheme="https://blog.rylander.io/tags/vsan/"/>
    
  </entry>
  
  <entry>
    <title>Install and Configure BookStack Using Docker and LDAP</title>
    <link href="https://blog.rylander.io/2017/06/09/install-and-configure-bookstack-using-docker-and-ldap/"/>
    <id>https://blog.rylander.io/2017/06/09/install-and-configure-bookstack-using-docker-and-ldap/</id>
    <published>2017-06-09T16:50:32.000Z</published>
    <updated>2017-06-09T16:50:32.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="BookStack"><a href="#BookStack" class="headerlink" title="BookStack"></a>BookStack</h2><p>Documenting is quite a chore and since leaving Evernote, I’ve been searching for a good tool to help me structure my stuff. I did turn to blogging just keep the information handy but I can only publish cleansed articles. Which means I have quite a few unpublished articles that either contain secrets, are poorly structured and written or just half-finished.</p><p>Many have recommended to use BookStack to act like an internal wiki. I do run Confluence, I feel it is good but just not a perfect fit for my purposes. The basics of BookStack are really appealing since I come from a similar type of structure from ScreenSteps, with books and chapters. It does feel a bit rough around the edges but the basics are there and actively developed.</p><p>Since I just can’t write Markdown in any sensible way, I will still be using ClarifyIt or ScreenSteps for the actual authoring and then export the results via Markdown files. This is the same workflow I have for the blog using the static website framework Hexo. Next step is to tinker with a BookStack compatible Markdown template for ClarifyIt.</p><img src="/2017/06/09/install-and-configure-bookstack-using-docker-and-ldap/bookstack.png" class=""><h2 id="Docker-host-volume-folders"><a href="#Docker-host-volume-folders" class="headerlink" title="Docker host volume folders"></a>Docker host volume folders</h2><p>I’m using the Synology to act as my Docker host so I create a folder structure and map out the different folders from the container image.</p><p>I chose to externalize the database structure and the uploads folders.</p><p>Most settings are set via environment variables defined in the docker-compose.yml file.</p><img src="/2017/06/09/install-and-configure-bookstack-using-docker-and-ldap/docker-host-volume-folders.png" class=""><h2 id="Configure"><a href="#Configure" class="headerlink" title="Configure"></a>Configure</h2><ol><li>Map an existing folder from the host to house the database files</li><li>Map existing folders for the upload files</li><li>Ensure the URL is correct as this is used everywhere.</li><li>Enable and configure LDAP. This is for Active Directory which means the identifier for the username is special.</li><li>Note the double $ signs as this had me stumped for such along time. Since we run BookStack within a container and this should be evaluated as a PHP variable, two are required since one is lost in translation ;)</li></ol><img src="/2017/06/09/install-and-configure-bookstack-using-docker-and-ldap/configure.png" class=""><h2 id="Reverse-proxy"><a href="#Reverse-proxy" class="headerlink" title="Reverse proxy"></a>Reverse proxy</h2><p>Since I use the Synology feature of Web App Proxy, I renew and install a fresh SNI certificate on the Synology and then map up a new reverse proxy for the given url. Since I’m using a split DNS, I need to create the DNS entry in both my internal and external DNS servers.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;BookStack&quot;&gt;&lt;a href=&quot;#BookStack&quot; class=&quot;headerlink&quot; title=&quot;BookStack&quot;&gt;&lt;/a&gt;BookStack&lt;/h2&gt;&lt;p&gt;Documenting is quite a chore and since lea
      
    
    </summary>
    
    
      <category term="docker" scheme="https://blog.rylander.io/tags/docker/"/>
    
      <category term="synology" scheme="https://blog.rylander.io/tags/synology/"/>
    
      <category term="docs" scheme="https://blog.rylander.io/tags/docs/"/>
    
  </entry>
  
  <entry>
    <title>Use Synology Nginx to Proxy HTTPS Request to Your Unifi Controller</title>
    <link href="https://blog.rylander.io/2017/05/10/use-synology-nginx-to-proxy-https-request-to-your-unifi-controller/"/>
    <id>https://blog.rylander.io/2017/05/10/use-synology-nginx-to-proxy-https-request-to-your-unifi-controller/</id>
    <published>2017-05-10T15:14:39.000Z</published>
    <updated>2017-05-10T15:14:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>Since Chrome has begun to warn against sites not using HTTPS, including self-signed which are prominent in DIY solutions, I’ve turned to use my NAS box to perform reverse proxy functions and to host my SNI based SSL certificate from LetsEncrypt. An SNI certificate has up to 100 alternate names rolled into one certificate, which is almost like a wildcard certificate. I install that certificate on my NAS and then reverse proxy all HTTPS request via the built in nginx proxy to the individual services.</p><p>For the Unifi controller however, more tinkering is neccessary and the reverse proxy cannot be setup using the UI. Instead we need to configure the nginx proxy directly.</p><img src="/2017/05/10/use-synology-nginx-to-proxy-https-request-to-your-unifi-controller/7cff8971-7ff7-4e08-8623-4cf98528fa83.jpg" class=""><h2 id="Setup-Reverse-Proxy-via-Control-Panel-Application-Portal"><a href="#Setup-Reverse-Proxy-via-Control-Panel-Application-Portal" class="headerlink" title="Setup Reverse Proxy via Control Panel/Application Portal"></a>Setup Reverse Proxy via Control Panel/Application Portal</h2><p>The common way of using the Synology NAS as a reverse proxy. I’ve setup my internal DNS to point to the NAS ip, which then looks at the requested hostname and performs a simple proxy.</p><img src="/2017/05/10/use-synology-nginx-to-proxy-https-request-to-your-unifi-controller/setup-reverse-proxy-via-control-panel-application-portal.png" class=""><h2 id="WebSocket-connection-error"><a href="#WebSocket-connection-error" class="headerlink" title="WebSocket connection error"></a>WebSocket connection error</h2><p>The WS and WSS protocols are however not handled out of the box by Synology. The WSS protocol is equivalent with HTTPS, but for websockets.</p><p>The errors will show up in the UI and the browser console.</p><img src="/2017/05/10/use-synology-nginx-to-proxy-https-request-to-your-unifi-controller/websocket-connection-error.png" class=""><h2 id="Find-a-safe-place-to-persist-configuration"><a href="#Find-a-safe-place-to-persist-configuration" class="headerlink" title="Find a safe place to persist configuration"></a>Find a safe place to persist configuration</h2><p>Log into the NAS and navigate to the proxy settings directory.</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/etc/nginx/sites/sites-enabled</span><br></pre></td></tr></table></figure><p>Synology autogenerates the nginx configuration whenever you change parameters via the UI, so this is a safe place to have changes persist. The main configuration file is directed to load all settings from this directory.</p><img src="/2017/05/10/use-synology-nginx-to-proxy-https-request-to-your-unifi-controller/find-a-safe-place-to-persist-configuration.png" class=""><h2 id="Create-config-file"><a href="#Create-config-file" class="headerlink" title="Create config file"></a>Create config file</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi unifi.rylander.io.conf</span><br></pre></td></tr></table></figure><p>Note the separate configuration to handle WSS</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">        listen 443 ssl;</span><br><span class="line">        listen [::]:443 ssl;</span><br><span class="line">        server_name unifi.rylander.io;</span><br><span class="line">        location /wss &#123;</span><br><span class="line">            proxy_pass [https://localhost:8443/wss;](https://localhost:8443/wss;)</span><br><span class="line">            proxy_redirect off;</span><br><span class="line">            proxy_buffering off;</span><br><span class="line">            proxy_set_header Host $host;</span><br><span class="line">            proxy_set_header X-Real-IP $remote_addr;</span><br><span class="line">            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class="line">            proxy_http_version 1.1;</span><br><span class="line">            proxy_set_header Upgrade $http_upgrade;</span><br><span class="line">            proxy_set_header Connection "Upgrade";</span><br><span class="line">            proxy_ssl_verify off;</span><br><span class="line">        &#125;</span><br><span class="line">        location / &#123;</span><br><span class="line">            proxy_set_header        Host                $host;</span><br><span class="line">            proxy_set_header        X-Real-IP           $remote_addr;</span><br><span class="line">            proxy_set_header        X-Forwarded-For     $proxy_add_x_forwarded_for;</span><br><span class="line">            proxy_set_header        X-Forwarded-Proto   $scheme;</span><br><span class="line">            proxy_intercept_errors  on;</span><br><span class="line">            proxy_http_version      1.1;</span><br><span class="line">            proxy_ssl_verify        off;</span><br><span class="line">            proxy_pass [https://localhost:8443;](https://localhost:8443;)</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/2017/05/10/use-synology-nginx-to-proxy-https-request-to-your-unifi-controller/create-config-file.png" class=""><h2 id="Restart-nginx"><a href="#Restart-nginx" class="headerlink" title="Restart nginx"></a>Restart nginx</h2><p>sudo synoservicecfg –restart nginx</p><h2 id="Verify-if-it-works"><a href="#Verify-if-it-works" class="headerlink" title="Verify if it works!"></a>Verify if it works!</h2><img src="/2017/05/10/use-synology-nginx-to-proxy-https-request-to-your-unifi-controller/verify-if-it-works-.png" class="">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Since Chrome has begun to warn against sites not using HTTPS, including self-signed which are prominent in DIY solutions, I’ve turned to 
      
    
    </summary>
    
    
      <category term="synology" scheme="https://blog.rylander.io/tags/synology/"/>
    
      <category term="unifi" scheme="https://blog.rylander.io/tags/unifi/"/>
    
      <category term="nginx" scheme="https://blog.rylander.io/tags/nginx/"/>
    
  </entry>
  
  <entry>
    <title>Let&#39;s Encrypt SAN Certificate, Nginx-Proxy and Docker</title>
    <link href="https://blog.rylander.io/2017/04/22/nginx-proxy-on-docker-and-letsencrypt-enabled/"/>
    <id>https://blog.rylander.io/2017/04/22/nginx-proxy-on-docker-and-letsencrypt-enabled/</id>
    <published>2017-04-22T15:36:23.000Z</published>
    <updated>2017-04-22T15:36:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>I’ve used Let’s Encrypt certificates to properly secure my internal services. Previously my setup was a Windows IIS running automatic renewal and sharing all certificate files on a NAS share. This worked really well from a Let’s Encrypt perspective, however since most of my services are not Windows services, the manual pain of converting certificates into the proper formats resulting in expired certificates in several places. Since I use NGINX to proxy some external services, I decided to also implement my Let’s Encrypt process on NGINX.</p><p>There are several solutions available, however I chose Jason Wilder’s setup <a href="https://github.com/jwilder" target="_blank" rel="noopener">https://github.com/jwilder</a>. The base is an nginx-proxy image which can be combined with an autoupdating service Let’s Encrypt as well as dynamic reloading of the configuration.</p><p>nginx-proxy sets up a container running nginx and <a href="https://github.com/jwilder/docker-gen" target="_blank" rel="noopener">docker-gen</a>. docker-gen generates reverse proxy configs for nginx and reloads nginx when containers are started and stopped.</p><img src="/2017/04/22/nginx-proxy-on-docker-and-letsencrypt-enabled/d93ffbe5-f761-48d5-9634-b375b39589d6.png" class=""><h2 id="Let’s-Encrypt-SAN-Certificate"><a href="#Let’s-Encrypt-SAN-Certificate" class="headerlink" title="Let’s Encrypt SAN Certificate"></a>Let’s Encrypt SAN Certificate</h2><p>Previously I was generating unique certificates for each service, however this time I chose to generate SAN (Subject Alternate Name - Multi Domain) certificates for the sake of laziness. I now get one physical certificate which I use on my internal services. SAN certificates are not supported by older browsers but works really well otherwise.</p><img src="/2017/04/22/nginx-proxy-on-docker-and-letsencrypt-enabled/let-s-encrypt-san-certificate.png" class=""><h2 id="nginx-proxy"><a href="#nginx-proxy" class="headerlink" title="nginx-proxy"></a>nginx-proxy</h2><p>All the heavy lifting has been done for use, we just need to follow the guide and configure it.</p><p><a href="https://github.com/jwilder/nginx-proxy" target="_blank" rel="noopener">https://github.com/jwilder/nginx-proxy</a> </p><p><a href="http://jasonwilder.com/blog/2014/03/25/automated-nginx-reverse-proxy-for-docker/" target="_blank" rel="noopener">http://jasonwilder.com/blog/2014/03/25/automated-nginx-reverse-proxy-for-docker/</a></p><img src="/2017/04/22/nginx-proxy-on-docker-and-letsencrypt-enabled/nginx-proxy.png" class=""><h2 id="Install-Docker-Compose"><a href="#Install-Docker-Compose" class="headerlink" title="Install Docker-Compose"></a>Install Docker-Compose</h2><p>I chose to use Docker-Compose due to it being easier to keep track of configuration, especially since we are using several interdependant containers.</p><p>I had to download and install docker-compose on my host, since I was running the micro version of VMWare’s Photon image.</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://github.com/docker/compose/releases/download/1.12.0/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose</span><br><span class="line">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><img src="/2017/04/22/nginx-proxy-on-docker-and-letsencrypt-enabled/install-docker-compose.png" class=""><h2 id="Configure-docker-compose-yml"><a href="#Configure-docker-compose-yml" class="headerlink" title="Configure docker-compose.yml"></a>Configure docker-compose.yml</h2><p>The docker-compose.yml file is versioned in the gist: <a href="https://gist.github.com/mry/b0a2d80e151343fd01061f78fc634f49" target="_blank" rel="noopener">https://gist.github.com/mry/b0a2d80e151343fd01061f78fc634f49</a> </p><p>My current setup ships the logs to a Splunk instance using the HTTP Event Listener and built in Docker logging. This does however bump the docker version requirements to 1.13.0. </p><p>The certificate files will be placed in one folder. Make sure to use your foremost hostname first since it will default to use that name.</p><p>I have a DNS setting to reference my external DNS (hosted by CloudFlare) since the names maps to internal ip:s inside my network. Whenever I add a new internal host, I must update both the internal DNS and the external DNS. I have a simple port-forward rule in my firewall to allow external access on ports 80 and 443 to this instance. Sometime in the future, I will switch to the DNS based domain verification instead so I can close down this opening.</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'2'</span>  </span><br><span class="line"><span class="attr">services:</span>  </span><br><span class="line">  <span class="attr">nginx-proxy:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">jwilder/nginx-proxy</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">nginx-proxy</span></span><br><span class="line">    <span class="attr">logging:</span></span><br><span class="line">      <span class="attr">driver:</span> <span class="string">splunk</span></span><br><span class="line">      <span class="attr">options:</span></span><br><span class="line">        <span class="attr">splunk-url:</span> <span class="string">https://10.0.1.29:8088</span></span><br><span class="line">        <span class="attr">splunk-token:</span> <span class="string">43D65CB7-4AE8-4ABD-B402-C345781009D4</span></span><br><span class="line">        <span class="attr">splunk-insecureskipverify:</span> <span class="string">'true'</span></span><br><span class="line">        <span class="attr">splunk-format:</span> <span class="string">json</span></span><br><span class="line">        <span class="attr">splunk-verify-connection:</span> <span class="string">'false'</span></span><br><span class="line">        <span class="attr">splunk-source:</span> <span class="string">letsencrypt-nginx-proxy</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'80:80'</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'443:443'</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/tmp/docker.sock:ro</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/etc/nginx/vhost.d</span> <span class="comment"># to update vhost configuration</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/usr/share/nginx/html</span> <span class="comment"># to write challenge files</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./certs:/etc/nginx/certs:ro</span> <span class="comment"># update this to change cert location</span></span><br><span class="line">  <span class="attr">web:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">'nginx'</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">nginx-web</span></span><br><span class="line">    <span class="attr">logging:</span></span><br><span class="line">      <span class="attr">driver:</span> <span class="string">splunk</span></span><br><span class="line">      <span class="attr">options:</span></span><br><span class="line">        <span class="attr">splunk-url:</span> <span class="string">https://10.0.1.29:8088</span></span><br><span class="line">        <span class="attr">splunk-token:</span> <span class="string">43D65CB7-4AE8-4ABD-B402-C345781009D4</span></span><br><span class="line">        <span class="attr">splunk-insecureskipverify:</span> <span class="string">'true'</span></span><br><span class="line">        <span class="attr">splunk-format:</span> <span class="string">json</span></span><br><span class="line">        <span class="attr">splunk-verify-connection:</span> <span class="string">'false'</span></span><br><span class="line">        <span class="attr">splunk-source:</span> <span class="string">letsencrypt-nginx-web</span></span><br><span class="line">    <span class="attr">expose:</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="string">'80'</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">VIRTUAL_HOST=rylander.io,humle.rylander.io,dumle.rylander.io,synods01.rylander.io,synods02.rylander.io,fw.rylander.io,humle-ilo.rylander.io,dumle-ilo.rylander.io,proget.rylander.io,unifi.rylander.io,couchpotato.rylander.io,jira.rylander.io,confluence.rylander.io,gitlab.rylander.io,artifactory.rylander.io,splunk.rylander.io</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">VIRTUAL_PORT=80</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">LETSENCRYPT_TEST=false</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">LETSENCRYPT_HOST=rylander.io,humle.rylander.io,dumle.rylander.io,synods01.rylander.io,synods02.rylander.io,fw.rylander.io,humle-ilo.rylander.io,dumle-ilo.rylander.io,proget.rylander.io,unifi.rylander.io,couchpotato.rylander.io,jira.rylander.io,confluence.rylander.io,gitlab.rylander.io,artifactory.rylander.io,splunk.rylander.io</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">LETSENCRYPT_EMAIL=mattias.rylander@gmail.com</span></span><br><span class="line">  <span class="attr">ssl-companion:</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">jrcs/letsencrypt-nginx-proxy-companion</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">ssl-companion</span></span><br><span class="line">    <span class="attr">logging:</span></span><br><span class="line">      <span class="attr">driver:</span> <span class="string">splunk</span></span><br><span class="line">      <span class="attr">options:</span></span><br><span class="line">        <span class="attr">splunk-url:</span> <span class="string">https://10.0.1.29:8088</span></span><br><span class="line">        <span class="attr">splunk-token:</span> <span class="string">43D65CB7-4AE8-4ABD-B402-C345781009D4</span></span><br><span class="line">        <span class="attr">splunk-insecureskipverify:</span> <span class="string">'true'</span></span><br><span class="line">        <span class="attr">splunk-format:</span> <span class="string">json</span></span><br><span class="line">        <span class="attr">splunk-verify-connection:</span> <span class="string">'false'</span></span><br><span class="line">        <span class="attr">splunk-source:</span> <span class="string">letsencrypt-ssl-companion</span></span><br><span class="line">    <span class="attr">dns:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'8.8.8.8'</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">'8.8.4.4'</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">/var/run/docker.sock:/var/run/docker.sock:ro</span> <span class="comment">#companion maps differently</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./certs:/etc/nginx/certs:rw</span> <span class="comment"># same path as above, now RW</span></span><br><span class="line">    <span class="attr">volumes_from:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">nginx-proxy</span></span><br><span class="line">    <span class="attr">depends_on:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">nginx-proxy</span></span><br></pre></td></tr></table></figure><h2 id="Test-run"><a href="#Test-run" class="headerlink" title="Test run"></a>Test run</h2><p>Test run the docker-compose up command to catch any errors. If all is well just add the -d switch.</p><img src="/2017/04/22/nginx-proxy-on-docker-and-letsencrypt-enabled/test-run.png" class=""><img src="/2017/04/22/nginx-proxy-on-docker-and-letsencrypt-enabled/92a80c2d-a892-4700-b201-ec763f6a7f38.png" class=""><h2 id="Create-a-service"><a href="#Create-a-service" class="headerlink" title="Create a service"></a>Create a service</h2><p>To have the service behave nicely, you can set it up as a service</p><img src="/2017/04/22/nginx-proxy-on-docker-and-letsencrypt-enabled/create-a-service.png" class=""><h2 id="Service-configuration"><a href="#Service-configuration" class="headerlink" title="Service configuration"></a>Service configuration</h2><img src="/2017/04/22/nginx-proxy-on-docker-and-letsencrypt-enabled/service-configuration.png" class=""><h2 id="Enable-the-service"><a href="#Enable-the-service" class="headerlink" title="Enable the service"></a>Enable the service</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl enable letsencrypt.service</span><br></pre></td></tr></table></figure><img src="/2017/04/22/nginx-proxy-on-docker-and-letsencrypt-enabled/enable-the-service.png" class="">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;I’ve used Let’s Encrypt certificates to properly secure my internal services. Previously my setup was a Windows IIS running automatic ren
      
    
    </summary>
    
    
      <category term="docker" scheme="https://blog.rylander.io/tags/docker/"/>
    
      <category term="ssl" scheme="https://blog.rylander.io/tags/ssl/"/>
    
      <category term="photon" scheme="https://blog.rylander.io/tags/photon/"/>
    
      <category term="letsencrypt" scheme="https://blog.rylander.io/tags/letsencrypt/"/>
    
  </entry>
  
  <entry>
    <title>Send EdgeRouter Lite Logs Using a Custom Port and Protocol</title>
    <link href="https://blog.rylander.io/2017/03/05/send-edgerouter-lite-logs-using-a-custom-port-and-protocol/"/>
    <id>https://blog.rylander.io/2017/03/05/send-edgerouter-lite-logs-using-a-custom-port-and-protocol/</id>
    <published>2017-03-05T14:19:00.000Z</published>
    <updated>2017-03-05T14:19:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>Further details for configuring rsyslog can be found here:</p><p><a href="http://www.rsyslog.com/sending-messages-to-a-remote-syslog-server/" target="_blank" rel="noopener">http://www.rsyslog.com/sending-messages-to-a-remote-syslog-server/</a><br><a href="https://www.loggly.com/docs/rsyslog-manual-configuration/" target="_blank" rel="noopener">https://www.loggly.com/docs/rsyslog-manual-configuration/</a></p><img src="/2017/03/05/send-edgerouter-lite-logs-using-a-custom-port-and-protocol/3713f3a4-7e1b-4f27-ab41-554afad6af8a.jpg" class=""><h2 id="Configure-rsyslog-on-EdgeRouter-Lite"><a href="#Configure-rsyslog-on-EdgeRouter-Lite" class="headerlink" title="Configure rsyslog on EdgeRouter Lite"></a>Configure rsyslog on EdgeRouter Lite</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo vi /etc/rsyslog.d/vyatta-log.conf</span><br></pre></td></tr></table></figure><p>@ denotes protocol</p><p>@=udp</p><p>@@=tcp</p><p>:port</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*.info  @10.0.1.29:4514</span><br><span class="line">*.notice;local7.*       -/var/log/messages</span><br></pre></td></tr></table></figure><img src="/2017/03/05/send-edgerouter-lite-logs-using-a-custom-port-and-protocol/configure-rsyslog-on-edgerouter-lite.png" class=""><h2 id="Restart-the-rsyslogd-daemon"><a href="#Restart-the-rsyslogd-daemon" class="headerlink" title="Restart the rsyslogd daemon"></a>Restart the rsyslogd daemon</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo service rsyslog restart</span><br></pre></td></tr></table></figure><img src="/2017/03/05/send-edgerouter-lite-logs-using-a-custom-port-and-protocol/restart-the-rsyslogd-daemon.png" class="">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Further details for configuring rsyslog can be found here:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.rsyslog.com/sending-messages-to-a-remote-syslog-ser
      
    
    </summary>
    
    
      <category term="ubnt" scheme="https://blog.rylander.io/tags/ubnt/"/>
    
      <category term="edgerouter" scheme="https://blog.rylander.io/tags/edgerouter/"/>
    
      <category term="splunk" scheme="https://blog.rylander.io/tags/splunk/"/>
    
  </entry>
  
  <entry>
    <title>Setting Up a Web Proxy Using Squid and Docker</title>
    <link href="https://blog.rylander.io/2017/02/16/setting-up-a-web-proxy-using-squid-and-docker/"/>
    <id>https://blog.rylander.io/2017/02/16/setting-up-a-web-proxy-using-squid-and-docker/</id>
    <published>2017-02-16T14:29:00.000Z</published>
    <updated>2017-02-16T14:29:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>My company has enforced an HTTP proxy requirement on my work computer. That effectively makes the computer unusable for web related work unless I hook it up to the corporate network using a VPN connection. So a local Squid proxy to the rescue!</p><p>I create a local domain using the same naming scheme that my work has, create a DNS entry mirroring the proxy host and setup a basic caching Squid proxy.</p><p>I choose this setup: <a href="https://github.com/sameersbn/docker-squid" target="_blank" rel="noopener">https://github.com/sameersbn/docker-squid</a> and forked the repo to my own GitHub account <a href="(https://github.com/mry/docker-squid)">(https://github.com/mry/docker-squid</a> and added my own customizations.</p><img src="/2017/02/16/setting-up-a-web-proxy-using-squid-and-docker/16379f67-8add-4863-b9ba-b80e7bcbe375.png" class=""><h2 id="Create-the-Docker-image"><a href="#Create-the-Docker-image" class="headerlink" title="Create the Docker image"></a>Create the Docker image</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t emryl/squid github.com/mry/docker-squid</span><br></pre></td></tr></table></figure><img src="/2017/02/16/setting-up-a-web-proxy-using-squid-and-docker/create-the-docker-image.png" class=""><h2 id="Login-to-DockerHub"><a href="#Login-to-DockerHub" class="headerlink" title="Login to DockerHub"></a>Login to DockerHub</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker login</span><br></pre></td></tr></table></figure><img src="/2017/02/16/setting-up-a-web-proxy-using-squid-and-docker/login-to-dockerhub.png" class=""><h2 id="Push-image-to-Docker-Hub"><a href="#Push-image-to-Docker-Hub" class="headerlink" title="Push image to Docker Hub"></a>Push image to Docker Hub</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker push</span><br></pre></td></tr></table></figure><img src="/2017/02/16/setting-up-a-web-proxy-using-squid-and-docker/push-image-to-docker-hub.png" class=""><h2 id="Running-using-docker-compose"><a href="#Running-using-docker-compose" class="headerlink" title="Running using docker-compose"></a>Running using docker-compose</h2><p>I set it up to run on my Synology NAS instance. I’ve create the neccessary folder structure according to the volume listing in the docker-compose.yml file.</p><p>When first run, it will download the image I uploaded in the previous step. On first run, omit the -d (for daemon) to see the container starts up without issues.</p><img src="/2017/02/16/setting-up-a-web-proxy-using-squid-and-docker/running-using-docker-compose.png" class=""><img src="/2017/02/16/setting-up-a-web-proxy-using-squid-and-docker/5ac49a57-e844-4d1d-801d-cb954a7b9c20.png" class=""><h2 id="Check-the-mapped-folders-are-used"><a href="#Check-the-mapped-folders-are-used" class="headerlink" title="Check the mapped folders are used"></a>Check the mapped folders are used</h2><img src="/2017/02/16/setting-up-a-web-proxy-using-squid-and-docker/check-the-mapped-folders-are-used.png" class=""><h2 id="Check-if-Squid-is-reachable"><a href="#Check-if-Squid-is-reachable" class="headerlink" title="Check if Squid is reachable"></a>Check if Squid is reachable</h2><p>Then configure the HTTP proxy setting in the client for port 8080.</p><img src="/2017/02/16/setting-up-a-web-proxy-using-squid-and-docker/check-if-squid-is-reachable.png" class="">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;My company has enforced an HTTP proxy requirement on my work computer. That effectively makes the computer unusable for web related work 
      
    
    </summary>
    
    
      <category term="docker" scheme="https://blog.rylander.io/tags/docker/"/>
    
  </entry>
  
  <entry>
    <title>Deploying New Photon VM From Template and Docker Up</title>
    <link href="https://blog.rylander.io/2017/02/12/deploying-new-photon-vm-from-template-and-docker-up/"/>
    <id>https://blog.rylander.io/2017/02/12/deploying-new-photon-vm-from-template-and-docker-up/</id>
    <published>2017-02-12T16:26:06.000Z</published>
    <updated>2017-02-12T16:26:06.000Z</updated>
    
    <content type="html"><![CDATA[<p>I’ve prepared a Photon micro image as a VSphere Template. I use this to get a tiny Linux host for hosting Docker.</p><img src="/2017/02/12/deploying-new-photon-vm-from-template-and-docker-up/090dc010-44ec-4153-bca8-34530c4e2e4a.png" class=""><h2 id="Change-the-default-root-password"><a href="#Change-the-default-root-password" class="headerlink" title="Change the default root password"></a>Change the default root password</h2><p>Default password for root is “changeme” and must be changes when logging in the first time.</p><img src="/2017/02/12/deploying-new-photon-vm-from-template-and-docker-up/change-the-default-root-password.png" class=""><h2 id="Clearing-the-Machine-ID-of-a-Cloned-Instance-for-DHCP"><a href="#Clearing-the-Machine-ID-of-a-Cloned-Instance-for-DHCP" class="headerlink" title="Clearing the Machine ID of a Cloned Instance for DHCP"></a>Clearing the Machine ID of a Cloned Instance for DHCP</h2><p>Photon OS uses the contents of /etc/machine-id to determine the DHCP unique identifier (duid) that is used for DHCP requests. If you use a Photon OS instance as the base system for cloning to create additional Photon OS instances, you should clear the machine-id with this command:</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo -n &gt; /etc/machine-id</span><br></pre></td></tr></table></figure><p>With the value cleared, systemd regenerates the machine-id and, as a result, all DHCP requests will contain a unique duid.</p><img src="/2017/02/12/deploying-new-photon-vm-from-template-and-docker-up/clearing-the-machine-id-of-a-cloned-instance-for-dhcp.png" class=""><h2 id="Update-the-package-manager"><a href="#Update-the-package-manager" class="headerlink" title="Update the package manager"></a>Update the package manager</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tdnf update</span><br></pre></td></tr></table></figure><img src="/2017/02/12/deploying-new-photon-vm-from-template-and-docker-up/update-the-package-manager.png" class=""><h2 id="Install-nano"><a href="#Install-nano" class="headerlink" title="Install nano"></a>Install nano</h2><p>tdnf install nano</p><img src="/2017/02/12/deploying-new-photon-vm-from-template-and-docker-up/install-nano.png" class=""><h2 id="Change-from-DHCP-to-static-address"><a href="#Change-from-DHCP-to-static-address" class="headerlink" title="Change from DHCP to static address"></a>Change from DHCP to static address</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mv /etc/systemd/network/99-dhcp-eth0.network  /etc/systemd/network/99-static-en.network</span><br><span class="line">nano /etc/systemd/network/99-static-en.network</span><br><span class="line"></span><br><span class="line">systemctl restart systemd-networkd.service</span><br></pre></td></tr></table></figure><p>or reboot</p><img src="/2017/02/12/deploying-new-photon-vm-from-template-and-docker-up/change-from-dhcp-to-static-address.png" class=""><h2 id="Check-and-set-hostname"><a href="#Check-and-set-hostname" class="headerlink" title="Check and set hostname"></a>Check and set hostname</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hostnamectl status</span><br><span class="line">hostnamectl set-hostname rancher_master.rylander.io</span><br></pre></td></tr></table></figure><img src="/2017/02/12/deploying-new-photon-vm-from-template-and-docker-up/check-and-set-hostname.png" class=""><h2 id="Upgrade-Docker"><a href="#Upgrade-Docker" class="headerlink" title="Upgrade Docker"></a>Upgrade Docker</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">tdnf upgrade docker -y</span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><img src="/2017/02/12/deploying-new-photon-vm-from-template-and-docker-up/upgrade-docker.png" class=""><h2 id="Start-Docker-and-enable-it-to-start-att-boot-time"><a href="#Start-Docker-and-enable-it-to-start-att-boot-time" class="headerlink" title="Start Docker and enable it to start att boot time"></a>Start Docker and enable it to start att boot time</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl start docker</span><br><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure><p>reboot the system</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;I’ve prepared a Photon micro image as a VSphere Template. I use this to get a tiny Linux host for hosting Docker.&lt;/p&gt;
&lt;img src=&quot;/2017/02/
      
    
    </summary>
    
    
      <category term="docker" scheme="https://blog.rylander.io/tags/docker/"/>
    
      <category term="vmware" scheme="https://blog.rylander.io/tags/vmware/"/>
    
      <category term="photon" scheme="https://blog.rylander.io/tags/photon/"/>
    
  </entry>
  
  <entry>
    <title>Increase Photon System Disk</title>
    <link href="https://blog.rylander.io/2017/02/12/increase-photon-system-disk-size/"/>
    <id>https://blog.rylander.io/2017/02/12/increase-photon-system-disk-size/</id>
    <published>2017-02-12T10:20:52.000Z</published>
    <updated>2017-02-12T10:20:52.000Z</updated>
    
    <content type="html"><![CDATA[<p>I use the minimal Photon distribution and it seems the system disk is only around 8GB.</p><p>That fills up quickly when installing some humongous Docker containers :/</p><h2 id="List-usage"><a href="#List-usage" class="headerlink" title="List usage"></a>List usage</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df -h</span><br></pre></td></tr></table></figure><img src="/2017/02/12/increase-photon-system-disk-size/list-usage.png" class=""><h2 id="Check-available-space-on-disk"><a href="#Check-available-space-on-disk" class="headerlink" title="Check available space on disk"></a>Check available space on disk</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">fdisk -l</span><br></pre></td></tr></table></figure><img src="/2017/02/12/increase-photon-system-disk-size/check-available-space-on-disk.png" class=""><h2 id="Install-Diskpart"><a href="#Install-Diskpart" class="headerlink" title="Install Diskpart"></a>Install Diskpart</h2><p>tdnf install parted</p><img src="/2017/02/12/increase-photon-system-disk-size/install-diskpart.png" class=""><h2 id="Diskpart"><a href="#Diskpart" class="headerlink" title="Diskpart"></a>Diskpart</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">parted</span><br><span class="line">print free</span><br></pre></td></tr></table></figure><img src="/2017/02/12/increase-photon-system-disk-size/diskpart.png" class=""><h2 id="Increase-size"><a href="#Increase-size" class="headerlink" title="Increase size"></a>Increase size</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">resizepart</span><br><span class="line">2</span><br><span class="line">100000</span><br></pre></td></tr></table></figure><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print free</span><br><span class="line">quit</span><br></pre></td></tr></table></figure><img src="/2017/02/12/increase-photon-system-disk-size/increase-size.png" class=""><h2 id="Reboot"><a href="#Reboot" class="headerlink" title="Reboot"></a>Reboot</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h2 id="Resize-filesystem"><a href="#Resize-filesystem" class="headerlink" title="Resize filesystem"></a>Resize filesystem</h2><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">resize2fs /dev/sda2</span><br></pre></td></tr></table></figure><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">df -h</span><br></pre></td></tr></table></figure><p>And a reboot just for good measure</p><img src="/2017/02/12/increase-photon-system-disk-size/resize-filesystem.png" class="">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;I use the minimal Photon distribution and it seems the system disk is only around 8GB.&lt;/p&gt;
&lt;p&gt;That fills up quickly when installing some 
      
    
    </summary>
    
    
      <category term="vmware" scheme="https://blog.rylander.io/tags/vmware/"/>
    
      <category term="esxi" scheme="https://blog.rylander.io/tags/esxi/"/>
    
      <category term="photon" scheme="https://blog.rylander.io/tags/photon/"/>
    
  </entry>
  
  <entry>
    <title>Install Docker-Compose on Photon</title>
    <link href="https://blog.rylander.io/2017/02/12/install-docker-compose-on-photon/"/>
    <id>https://blog.rylander.io/2017/02/12/install-docker-compose-on-photon/</id>
    <published>2017-02-12T08:56:34.000Z</published>
    <updated>2017-02-12T08:56:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>It seems docker-compose is not available as pre-packaged on Photon</p><img src="/2017/02/12/install-docker-compose-on-photon/7c2296bf-a68d-4da0-a1a5-ce8015ef186e.png" class=""><h2 id="Download-and-install"><a href="#Download-and-install" class="headerlink" title="Download and install"></a>Download and install</h2><p>As per docker-compose instructions: <a href="https://github.com/docker/compose/releases/" target="_blank" rel="noopener">https://github.com/docker/compose/releases/</a></p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://github.com/docker/compose/releases/download/1.13.0/docker-compose-`uname -s`-`uname -m` &gt; /usr/local/bin/docker-compose</span><br><span class="line">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><img src="/2017/02/12/install-docker-compose-on-photon/d--16-ownload-and-install.png" class="">]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;It seems docker-compose is not available as pre-packaged on Photon&lt;/p&gt;
&lt;img src=&quot;/2017/02/12/install-docker-compose-on-photon/7c2296bf-a6
      
    
    </summary>
    
    
      <category term="docker" scheme="https://blog.rylander.io/tags/docker/"/>
    
      <category term="photon" scheme="https://blog.rylander.io/tags/photon/"/>
    
  </entry>
  
</feed>
